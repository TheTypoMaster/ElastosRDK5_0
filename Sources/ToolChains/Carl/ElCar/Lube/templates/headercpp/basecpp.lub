$;;=========================================================================
$;; Copyright (c) 2000-2005,  Elastos, Inc.  All Rights Reserved.
$;;=========================================================================
$
$INPUT module
$OUTPUT "${name}.cpp"

#include "${name}.h"

using namespace Elastos;

$TEMPLATE "header/decluuid.lub"
$
$WITH all interfaces DO
$  IF interface.attrib is not "sink"
${InterfaceNamespaceBegin(interface)}$^
$   WITH all interfaceconsts DO
$     IF type is "Byte" or type is "Int16" or type is "Int32" or type is "Char32"
const ${type} ${interface.name}::${name};
$     ELSE
const ${type} ${interface.name}::${name} = ${value};
$     END IF
$   END DO ;; all interfaceconsts
${InterfaceNamespaceEnd(interface)}$^
$  END IF;; not sink
$END DO ;; all interfaces
$
$WITH all classes DO
$   IF type is not "sink" and type is not "clsobj" and attrib is not "private" and type is not "generic"
${ClassNamespaceBegin(class)}$^
$TEMPLATE "headercpp/basenewimpl.lub"
$
$
$IF type is not "generic" and attrib is not "private"
$TEMPLATE "headercpp/classnewimpl.lub"
$END IF
${ClassNamespaceEnd(class)}$^
$   END IF ;; is not sink and is not private and is not clsobj and is not "generic"
$END DO ;; all classes
$END OUTPUT