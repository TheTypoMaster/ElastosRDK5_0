
/**
 * An easy adapter to map columns from a cursor to TextViews or ImageViews
 * defined in an XML file. You can specify which columns you want, which
 * views you want to display the columns, and the XML file that defines
 * the appearance of these views.
 *
 * Binding occurs in two phases. First, if a
 * {@link android.widget.SimpleCursorAdapter.ViewBinder} is available,
 * {@link ViewBinder#setViewValue(android.view.View, android.database.Cursor, Int32)}
 * is invoked. If the returned value is true, binding has occured. If the
 * returned value is false and the view to bind is a TextView,
 * {@link #setViewText(TextView, String)} is invoked. If the returned value
 * is false and the view to bind is an ImageView,
 * {@link #setViewImage(ImageView, String)} is invoked. If no appropriate
 * binding can be found, an {@link IllegalStateException} is thrown.
 *
 * If this adapter is used with filtering, for instance in an
 * {@link android.widget.AutoCompleteTextView}, you can use the
 * {@link android.widget.SimpleCursorAdapter.CursorToStringConverter} and the
 * {@link android.widget.FilterQueryProvider} interfaces
 * to get control over the filtering process. You can refer to
 * {@link #convertToString(android.database.Cursor)} and
 * {@link #runQueryOnBackgroundThread(CharSequence)} for more information.
 */

module
{
    using interface Elastos.Core.ICharSequence;

    interface Elastos.Droid.View.IView;
    interface Elastos.Droid.Database.ICursor;

    namespace Elastos {
    namespace Droid {
    namespace Widget {

    /**
     * This class can be used by external clients of SimpleCursorAdapter
     * to bind values fom the Cursor to views.
     *
     * You should use this class to bind values from the Cursor to views
     * that are not directly supported by SimpleCursorAdapter or to
     * change the way binding occurs for views supported by
     * SimpleCursorAdapter.
     *
     * @see SimpleCursorAdapter#bindView(android.view.View, android.content.Context, android.database.Cursor)
     * @see SimpleCursorAdapter#setViewImage(ImageView, String)
     * @see SimpleCursorAdapter#setViewText(TextView, String)
     */
    [local]
    interface ISimpleCursorAdapterViewBinder {
        /**
         * Binds the Cursor column defined by the specified index to the specified view.
         *
         * When binding is handled by this ViewBinder, this method must return true.
         * If this method returns false, SimpleCursorAdapter will attempts to handle
         * the binding on its own.
         *
         * @param view the view to bind the data to
         * @param cursor the cursor to get the data from
         * @param columnIndex the column at which the data can be found in the cursor
         *
         * @return true if the data was bound to the view, false otherwise
         */
        SetViewValue(
            [in] IView* view,
            [in] ICursor* cursor,
            [in] Int32 columnIndex,
            [out] Boolean* result);
    }


    /**
     * This class can be used by external clients of SimpleCursorAdapter
     * to define how the Cursor should be converted to a String.
     *
     * @see android.widget.CursorAdapter#convertToString(android.database.Cursor)
     */
    [local]
    interface ICursorToStringConverter
    {
        /**
         * Returns a CharSequence representing the specified Cursor.
         *
         * @param cursor the cursor for which a CharSequence representation
         *        is requested
         *
         * @return a non-null CharSequence representing the cursor
         */
        ConvertToString(
            [in] ICursor* cursor,
            [out] ICharSequence** cs);
    }

    [deprecated]
    interface ISimpleCursorAdapter extends IResourceCursorAdapter
    {
        /**
         * Returns the {@link ViewBinder} used to bind data to views.
         *
         * @return a ViewBinder or null if the binder does not exist
         *
         * @see #bindView(android.view.View, android.content.Context, android.database.Cursor)
         * @see #setViewBinder(android.widget.SimpleCursorAdapter.ViewBinder)
         */
        GetViewBinder(
            [out] ISimpleCursorAdapterViewBinder** viewBinder);

        /**
         * Sets the binder used to bind data to views.
         *
         * @param viewBinder the binder used to bind data to views, can be null to
         *        remove the existing binder
         *
         * @see #bindView(android.view.View, android.content.Context, android.database.Cursor)
         * @see #getViewBinder()
         */
        SetViewBinder(
            [in] ISimpleCursorAdapterViewBinder* viewBinder);

        /**
         * Called by bindView() to set the image for an ImageView but only if
         * there is no existing ViewBinder or if the existing ViewBinder cannot
         * handle binding to an ImageView.
         *
         * By default, the value will be treated as an image resource. If the
         * value cannot be used as an image resource, the value is used as an
         * image Uri.
         *
         * Intended to be overridden by Adapters that need to filter strings
         * retrieved from the database.
         *
         * @param v ImageView to receive an image
         * @param value the value retrieved from the cursor
         */
        SetViewImage(
            [in] IImageView* v,
            [in] String value);

        /**
         * Called by bindView() to set the text for a TextView but only if
         * there is no existing ViewBinder or if the existing ViewBinder cannot
         * handle binding to a TextView.
         *
         * Intended to be overridden by Adapters that need to filter strings
         * retrieved from the database.
         *
         * @param v TextView to receive text
         * @param text the text to be set for the TextView
         */
        SetViewText(
            [in] ITextView* v,
            [in] String text);

        /**
         * Return the index of the column used to get a String representation
         * of the Cursor.
         *
         * @return a valid index in the current Cursor or -1
         *
         * @see android.widget.CursorAdapter#convertToString(android.database.Cursor)
         * @see #setStringConversionColumn(Int32)
         * @see #setCursorToStringConverter(android.widget.SimpleCursorAdapter.CursorToStringConverter)
         * @see #getCursorToStringConverter()
         */
        GetStringConversionColumn(
            [out] Int32* index);

        /**
         * Defines the index of the column in the Cursor used to get a String
         * representation of that Cursor. The column is used to convert the
         * Cursor to a String only when the current CursorToStringConverter
         * is null.
         *
         * @param stringConversionColumn a valid index in the current Cursor or -1 to use the default
         *        conversion mechanism
         *
         * @see android.widget.CursorAdapter#convertToString(android.database.Cursor)
         * @see #getStringConversionColumn()
         * @see #setCursorToStringConverter(android.widget.SimpleCursorAdapter.CursorToStringConverter)
         * @see #getCursorToStringConverter()
         */
        SetStringConversionColumn(
            [in] Int32 stringConversionColumn);

        /**
         * Returns the converter used to convert the filtering Cursor
         * into a String.
         *
         * @return null if the converter does not exist or an instance of
         *         {@link android.widget.SimpleCursorAdapter.CursorToStringConverter}
         *
         * @see #setCursorToStringConverter(android.widget.SimpleCursorAdapter.CursorToStringConverter)
         * @see #getStringConversionColumn()
         * @see #setStringConversionColumn(Int32)
         * @see android.widget.CursorAdapter#convertToString(android.database.Cursor)
         */
        GetCursorToStringConverter(
            [out] ICursorToStringConverter** cursorToStringConverter);

        /**
         * Sets the converter  used to convert the filtering Cursor
         * into a String.
         *
         * @param cursorToStringConverter the Cursor to String converter, or
         *        null to remove the converter
         *
         * @see #setCursorToStringConverter(android.widget.SimpleCursorAdapter.CursorToStringConverter)
         * @see #getStringConversionColumn()
         * @see #setStringConversionColumn(Int32)
         * @see android.widget.CursorAdapter#convertToString(android.database.Cursor)
         */
        SetCursorToStringConverter(
            [in] ICursorToStringConverter* cursorToStringConverter);

        /**
         * Change the cursor and change the column-to-view mappings at the same time.
         *
         * @param c The database cursor.  Can be null if the cursor is not available yet.
         * @param from A list of column names representing the data to bind to the UI.  Can be null
         *            if the cursor is not available yet.
         * @param to The views that should display column in the "from" parameter.
         *            These should all be TextViews. The first N views in this list
         *            are given the values of the first N columns in the from
         *            parameter.  Can be null if the cursor is not available yet.
         */
        ChangeCursorAndColumns(
            [in] ICursor* c,
            [in] ArrayOf<String>* fromArray,
            [in] ArrayOf<Int32>* toArray);

    }

    } // namespace Widget
    } // namespace Droid
    } // namespace Elastos
}
