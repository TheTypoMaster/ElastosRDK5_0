module
{
    namespace Elastos {
    namespace Droid {
    namespace Os {

    /**
     * @Involve
     * interface Elastos.Core.IThread
     */
    interface IHandlerThread {
        GetLooper(
            [out] ILooper** looper);

        /**
         * Quits the handler thread's looper.
         * <p>
         * Causes the handler thread's looper to terminate without processing any
         * more messages in the message queue.
         * </p><p>
         * Any attempt to post messages to the queue after the looper is asked to quit will fail.
         * For example, the {@link Handler#sendMessage(Message)} method will return false.
         * </p><p class="note">
         * Using this method may be unsafe because some messages may not be delivered
         * before the looper terminates.  Consider using {@link #quitSafely} instead to ensure
         * that all pending work is completed in an orderly manner.
         * </p>
         *
         * @return True if the looper looper has been asked to quit or false if the
         * thread had not yet started running.
         *
         * @see #quitSafely
         */
        Quit(
            [out] Boolean* result);

        QuitSafely(
            [out] Boolean* result);

        GetThreadId(
            [out] Int32* tid);
    }

    } // namespace Os
    } // namespace Droid
    } // namespace Elastos
}
