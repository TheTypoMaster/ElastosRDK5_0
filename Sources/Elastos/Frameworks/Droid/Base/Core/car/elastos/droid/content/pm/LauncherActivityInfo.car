
module
{
    using interface Elastos.Core.ICharSequence;

    interface Elastos.Droid.Os.IUserHandle;
    interface Elastos.Droid.Graphics.Drawable.IDrawable;
    interface Elastos.Droid.Content.IComponentName;

    namespace Elastos {
    namespace Droid {
    namespace Content {
    namespace Pm {

    /**
     * A representation of an activity that can belong to this user or a managed
     * profile associated with this user. It can be used to query the label, icon
     * and badged icon for the activity.
     */
    interface ILauncherActivityInfo {
        /**
         * Returns the component name of this activity.
         *
         * @return ComponentName of the activity
         */
        GetComponentName(
            [out] IComponentName** name);

        /**
         * Returns the user handle of the user profile that this activity belongs to. In order to
         * persist the identity of the profile, do not store the UserHandle. Instead retrieve its
         * serial number from UserManager. You can convert the serial number back to a UserHandle
         * for later use.
         *
         * @see UserManager#getSerialNumberForUser(UserHandle)
         * @see UserManager#getUserForSerialNumber(long)
         *
         * @return The UserHandle of the profile.
         */
        GetUser(
            [out] IUserHandle** handle);

        /**
         * Retrieves the label for the activity.
         *
         * @return The label for the activity.
         */
        GetLabel(
            [out] ICharSequence** seq);

        /**
         * Returns the icon for this activity, without any badging for the profile.
         * @param density The preferred density of the icon, zero for default density. Use
         * density DPI values from {@link DisplayMetrics}.
         * @see #getBadgedIcon(int)
         * @see DisplayMetrics
         * @return The drawable associated with the activity
         */
        GetIcon(
            [in] Int32 density,
            [out] IDrawable** drawable);

        /**
         * Returns the application flags from the ApplicationInfo of the activity.
         *
         * @return Application flags
         * @hide remove before shipping
         */
        GetApplicationFlags(
            [out] Int32* result);

        /**
         * Returns the application info for the appliction this activity belongs to.
         * @return
         */
        GetApplicationInfo(
            [out] IApplicationInfo** info);

        /**
         * Returns the time at which the package was first installed.
         *
         * @return The time of installation of the package, in milliseconds.
         */
        GetFirstInstallTime(
            [out] Int64* time);

        /**
         * Returns the name for the acitivty from  android:name in the manifest.
         * @return the name from android:name for the acitivity.
         */
        GetName(
            [out] String* name);

        /**
         * Returns the activity icon with badging appropriate for the profile.
         * @param density Optional density for the icon, or 0 to use the default density. Use
         * {@link DisplayMetrics} for DPI values.
         * @see DisplayMetrics
         * @return A badged icon for the activity.
         */
        GetBadgedIcon(
            [in] Int32 density,
            [out] IDrawable** drawable);
    }

    } // namespace Pm
    } // namespace Content
    } // namespace Droid
    } // namespace Elastos
}
