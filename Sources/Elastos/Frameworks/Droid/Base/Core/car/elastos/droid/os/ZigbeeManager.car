module
{
    namespace Elastos {
    namespace Droid {
    namespace Os {

    interface IZigbeeManager {
        /*
         *  define of temperature warning setting
        */
        const Int32 WARNING_TEMPERATURE_UPPER_LIMIT = 1;
        const Int32 WARNING_TEMPERATURE_LOWER_LIMIT = 0;
        const Int32 WARNING_HUMIDITY_UPPER_LIMIT = 3;
        const Int32 WARNING_HUMIDITY_LOWER_LIMIT = 4;

        /*
         *   Zigbee device type
        */
        const Int32 ZIGBEE_DEV_TYPE_BULB = 0x0102;
        const Int32 ZIGBEE_DEV_TYPE_SENSOR = 0x0402;
        const Int32 ZIGBEE_DEV_TYPE_SWITCH = 0x0002;
        const Int32 ZIGBEE_DEV_TYPE_NHR_SENSOR = 0x0302;

        /*
         *  Zigbee device zone type
        */
        const Int32 ZIGBEE_ZONE_TYPE_NONE = 0xffff;
        const Int32 ZIGBEE_ZONE_TYPE_TEMPERATURE = 0x000d;
        const Int32 ZIGBEE_ZONE_TYPE_DOOR = 0x0015;

        /**
         *  ACTION Definition
         */
        const String ACTION_DEVICE_STATE_CHANGED = "android.intent.action.zigbee.DEVICE_STATE_CHANGED";   //[short-term solution for sync state between remote client and local client
        const String ACTION_DEVICE_COUNT_CHANGED = "android.intent.action.zigbee.DEVICE_COUNT_CHANGED";
        const String ACTION_ONLINE_STATUS_CHANGED = "android.intent.action.zigbee.ONLINE_STATUS_CHANGED";
        const String ACTION_SENSOR_TEMPERATURE_CHANGED = "android.intent.action.zigbee.SENSOR_TEMPERATURE_CHANGED";
        const String ACTION_SENSOR_HUMIDITY_CHANGED = "android.intent.action.zigbee.SENSOR_HUMIDITY_CHANGED";
        const String ACTION_DOOR_ONOFF_STATE_CHANGED = "android.intent.action.zigbee.DOOR_ONOFF_STATE_CHANGED";
        const String ACTION_SENSOR_VOLTAGE_CHANGED = "android.intent.action.zigbee.SENSOR_VOLTAGE_CHANGED";
        const String ACTION_SENSOR_DOOR_WARNING = "android.intent.action.zigbee.ACTION_SENSOR_DOOR_WARNING";
        const String ACTION_SENSOR_TEMPERATURE_WARNING = "android.intent.action.zigbee.ACTION_SENSOR_TEMPERATURE_WARNING";
        const String ACTION_SENSOR_HUMIDITY_WARNING = "android.intent.action.zigbee.ACTION_SENSOR_HUMIDITY_WARNING";
        const String ACTION_SENSOR_TEMPERATURE_UPPER_LIMIT_WARNING = "android.intent.action.zigbee.SENSOR_TEMPERATURE_UPPER_LIMIT_WARNING";
        const String ACTION_SENSOR_TEMPERATURE_LOWER_LIMIT_WARNING = "android.intent.action.zigbee.SENSOR_TEMPERATURE_LOWER_LIMIT_WARNING";
        const String ACTION_SENSOR_HUMIDITY_UPPER_LIMIT_WARNING = "android.intent.action.zigbee.SENSOR_HUMIDITY_UPPER_LIMIT_WARNING";
        const String ACTION_SENSOR_HUMIDITY_LOWER_LIMIT_WARNING = "android.intent.action.zigbee.SENSOR_HUMIDITY_LOWER_LIMIT_WARNING";

        /*
         *  EXTRA Definition
        */
        const String EXTRA_NAME = "name";
        const String EXTRA_STATUS = "status";
        const String EXTRA_STATE = "state";
        const String EXTRA_TEMPERATURE = "temperature";
        const String EXTRA_HUMIDITY = "humidity";
        const String EXTRA_VOLTAGE = "voltage";
        const String EXTRA_TIME = "time";

        /*
         *  Values of EXTRA_STATUS field
        */
        const Int32 STATUS_UNKNOWN = 2;
        const Int32 STATUS_ONLINE = 1;
        const Int32 STATUS_OFFLINE = 0;

        /*
         *  Values of EXTRA_STATE (on/off state)
        */
        const Int32 STATE_UNKNOWN = 2;
        const Int32 STATE_ON = 1;
        const Int32 STATE_OFF = 0;

        /*
         *  Values of mixed sensor used
        */
        const Int32 MIX_TH_Temperature = 1; //ZigbeeTHSensor temperature
        const Int32 MIX_TH_Humidity = 2;    //ZigbeeTHSensor humidity

        /*
         *  Check if type is defined
         *  Return value: true - type is defined, false - invalid type
        */
        IsValidType(
            [in] Int32 checkType,
            [out] Boolean* res);

        // Get available ACTION for Zigbee service
        GetAllActions(
            [out, callee] ArrayOf<String>* actions);
    }

    } // namespace Os
    } // namespace Droid
    } // namespace Elastos
}
