
module
{
    using interface Elastos.Core.IRunnable;
    interface Elastos.Droid.Os.IBinder;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Os {

    /**
     * Private and debugging Binder APIs.
     *
     * @see IBinder
     */
    [local]
    interface IBinderInternal {
        AddGcWatcher(
            [in] IRunnable* watcher);

        /**
         * Add the calling thread to the IPC thread pool.  This function does
         * not return until the current process is exiting.
         */
        JoinThreadPool();

        /**
         * Return the system time (as reported by {@link SystemClock#uptimeMillis
         * SystemClock.uptimeMillis()}) that the last garbage collection occurred
         * in this process.  This is not for general application use, and the
         * meaning of "when a garbage collection occurred" will change as the
         * garbage collector evolves.
         *
         * @return Returns the time as per {@link SystemClock#uptimeMillis
         * SystemClock.uptimeMillis()} of the last garbage collection.
         */
        GetLastGcTime(
            [out] Int64* time);

        /**
         * Return the global "context object" of the system.  This is usually
         * an implementation of IServiceManager, which you can use to find
         * other services.
         */
        GetContextObject(
            [out] IBinder** binder);

        /**
         * Special for system process to not allow incoming calls to run at
         * background scheduling priority.
         * @hide
         */
        DisableBackgroundScheduling(
            [in] Boolean dis);

        ForceGc(
            [in] String reason);
    }

    }//namespace Os
    }//namespace Internal
    }//namespace Droid
    }//namespace Elastos
}
