module
{
    namespace Elastos {
    namespace Droid {
    namespace Database {

    /**
     * The result of a call to next().
     */
    enum CursorJoinerResult {
        /** The row currently pointed to by the left cursor is unique */
        CursorJoinerResult_RIGHT,
        /** The row currently pointed to by the right cursor is unique */
        CursorJoinerResult_LEFT,
        /** The rows pointed to by both cursors are the same */
        CursorJoinerResult_BOTH
    }

    /**
     * Does a join on two cursors using the specified columns. The cursors must already
     * be sorted on each of the specified columns in ascending order. This joiner only
     * supports the case where the tuple of key column values is unique.
     * <p>
     * Typical usage:
     *
     * <pre>
     * CursorJoiner joiner = new CursorJoiner(cursorA, keyColumnsofA, cursorB, keyColumnsofB);
     * for (CursorJointer.Result joinerResult : joiner) {
     *     switch (joinerResult) {
     *         case LEFT:
     *             // handle case where a row in cursorA is unique
     *             break;
     *         case RIGHT:
     *             // handle case where a row in cursorB is unique
     *             break;
     *         case BOTH:
     *             // handle case where a row with the same key is in both cursors
     *             break;
     *     }
     * }
     * </pre>
     */
    interface ICursorJoiner {
//      public Iterator<Result> iterator()

        /**
         * Returns whether or not there are more rows to compare using next().
         * @return true if there are more rows to compare
         */
        HasNext(
            [out] Boolean* result);

        /**
         * Returns the comparison result of the next row from each cursor. If one cursor
         * has no more rows but the other does then subsequent calls to this will indicate that
         * the remaining rows are unique.
         * <p>
         * The caller must check that hasNext() returns true before calling this.
         * <p>
         * Once next() has been called the cursors specified in the result of the call to
         * next() are guaranteed to point to the row that was indicated. Reading values
         * from the cursor that was not indicated in the call to next() will result in
         * undefined behavior.
         * @return LEFT, if the row pointed to by the left cursor is unique, RIGHT
         *   if the row pointed to by the right cursor is unique, BOTH if the rows in both
         *   cursors are the same.
         */
        GetNext(
            [out] CursorJoinerResult* result);

        Remove();
    }

    } //Database
    } //Droid
    } //Elastos
}