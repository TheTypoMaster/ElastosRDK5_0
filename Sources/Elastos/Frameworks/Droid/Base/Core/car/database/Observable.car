module
{
    namespace Elastos {
    namespace Droid {
    namespace Database {

    /**
     * Provides methods for registering or unregistering arbitrary observers in an {@link ArrayList}.
     *
     * This abstract class is intended to be subclassed and specialized to maintain
     * a registry of observers of specific types and dispatch notifications to them.
     *
     * @param T The observer type.
     */
    interface IObservable {
        /**
         * Adds an observer to the list. The observer cannot be NULL and it must not already
         * be registered.
         * @param observer the observer to register
         * @throws IllegalArgumentException the observer is NULL
         * @throws IllegalStateException the observer is already registered
         */
        RegisterObserver(
            [in] IInterface* observer);

        /**
         * Removes a previously registered observer. The observer must not be NULL and it
         * must already have been registered.
         * @param observer the observer to unregister
         * @throws IllegalArgumentException the observer is NULL
         * @throws IllegalStateException the observer is not yet registered
         */
        UnregisterObserver(
            [in] IInterface* observer);

        /**
         * Remove all registered observer
         */
        UnregisterAll();
    }

    }
    }
    }
}
