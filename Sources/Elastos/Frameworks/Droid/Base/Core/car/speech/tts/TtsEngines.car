module
{
    interface IObjectContainer;
    //interface Elastos.Droid.Content.IContext;
    interface Elastos.Droid.Content.IIntent;
    interface Elastos.Droid.Speech.Tts.ITextToSpeechEngineInfo;

    namespace Elastos {
    namespace Droid {
    namespace Speech {
    namespace Tts {

    /**
     * Support class for querying the list of available engines
     * on the device and deciding which one to use etc.
     *
     * Comments in this class the use the shorthand "system engines" for engines that
     * are a part of the system image.
     *
     * @hide
     */
    interface ITtsEngines {

        /**
         * @return the default TTS engine. If the user has set a default, and the engine
         *         is available on the device, the default is returned. Otherwise,
         *         the highest ranked engine is returned as per {@link EngineInfoComparator}.
         */
        GetDefaultEngine(
            [out] String* ret);

        /**
         * @return the package name of the highest ranked system engine, {@code null}
         *         if no TTS engines were present in the system image.
         */
        GetHighestRankedEngineName(
            [out] String* ret);

        /**
         * Returns the engine info for a given engine name. Note that engines are
         * identified by their package name.
         */
        GetEngineInfo(
            [in] String packageName,
            [out] ITextToSpeechEngineInfo** ret);

        /**
         * Gets a list of all installed TTS engines.
         *
         * @return A list of engine info objects. The list can be empty, but never {@code null}.
         */
        //public List<EngineInfo>
        GetEngines(
            [out] IObjectContainer** ret);

        /**
         * @return true if a given engine is installed on the system.
         */
        IsEngineInstalled(
            [in] String engine,
            [out] Boolean* ret);

        /**
         * @return an intent that can launch the settings activity for a given tts engine.
         */
        GetSettingsIntent(
            [in] String engine,
            [out] IIntent** ret);

        /**
         * Returns the locale string for a given TTS engine. Attempts to read the
         * value from {@link Settings.Secure#TTS_DEFAULT_LOCALE}, failing which the
         * old style value from {@link Settings.Secure#TTS_DEFAULT_LANG} is read. If
         * both these values are empty, the default phone locale is returned.
         *
         * @param engineName the engine to return the locale for.
         * @return the locale string preference for this engine. Will be non null
         *         and non empty.
         */
        GetLocalePrefForEngine(
            [in] String engineName,
            [out] String* ret);

        //synchronized
        UpdateLocalePrefForEngine(
            [in] String name,
            [in] String newLocale);
    }

    interface ITtsEnginesHelper {
        /**
         * Parses a locale preference value delimited by {@link #LOCALE_DELIMITER}.
         * Varies from {@link String#split} in that it will always return an array
         * of length 3 with non null values.
         */
        ParseLocalePref(
            [in] String pref,
            [out, callee] ArrayOf<String>* ret);
    }


    }//namespace Tts
    }//namespace Speech
    }//namespace Droid
    }//namespace Elastos

}