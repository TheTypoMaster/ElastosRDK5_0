
module
{
    namespace Elastos {
    namespace Droid {
    namespace Hardware {
    namespace Display {

    interface IWifiDisplay {
        /**
         * Gets the MAC address of the Wifi display device.
         */
        GetDeviceAddress(
            [out] String* address);

        /**
         * Gets the name of the Wifi display device.
         */
        GetDeviceName(
            [out] String* name);

        /**
         * Gets the user-specified alias of the Wifi display device, or null if none.
         * <p>
         * The alias should be used in the UI whenever available.  It is the value
         * provided by the user when renaming the device.
         * </p>
         */
        GetDeviceAlias(
            [out] String* alias);

        /**
         * Gets the name to show in the UI.
         * Uses the device alias if available, otherwise uses the device name.
         */
        GetFriendlyDisplayName(
            [out] String* displayName);

        Equals(
            [in] IWifiDisplay* other,
            [out] Boolean* res);

        Equals(
            [in] IInterface* other,
            [out] Boolean* res);

        GetHashCode(
            [out] Int32* code);

        /**
         * Returns true if the other display is not null and has the same address as this one.
         * Can be used to perform identity comparisons on displays ignoring properties
         * that might change during a connection such as the name or alias.
         */
        HasSameAddress(
            [in] IWifiDisplay* other,
            [out] Boolean* res);

        ToString(
            [out] String* info);
    }

    } // namespace Display
    } // namespace Hardware
    } // namespace Droid
    } // namespace Elastos
}
