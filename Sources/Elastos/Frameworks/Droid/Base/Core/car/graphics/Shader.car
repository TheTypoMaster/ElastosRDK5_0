
module
{
    interface Elastos.Droid.Graphics.IMatrix;

    namespace Elastos {
    namespace Droid {
    namespace Graphics {

    enum ShaderTileMode {
        /**
         * replicate the edge color if the shader draws outside of its
         * original bounds
         */
        ShaderTileMode_CLAMP = 0,

        /**
         * repeat the shader's image horizontally and vertically
         */
        ShaderTileMode_REPEAT = 1,

        /**
         * repeat the shader's image horizontally and vertically, alternating
         * mirror images so that adjacent images always seam
         */
        ShaderTileMode_MIRROR = 2,
    }

    /**
     * Shader is the based class for objects that return horizontal spans of colors
     * during drawing. A subclass of Shader is installed in a Paint calling
     * paint.setShader(shader). After that any object (other than a bitmap) that is
     * drawn with that paint will get its color(s) from the shader.
     */
    interface IShader {
        /**
         * Return true if the shader has a non-identity local matrix.
         * @param localM If not null, it is set to the shader's local matrix.
         * @return true if the shader has a non-identity local matrix
         */
        GetLocalMatrix(
            [in/* ,out*/] IMatrix* localM,
            [out] Boolean* result);

        /**
         * Set the shader's local matrix. Passing null will reset the shader's
         * matrix to identity
         * @param localM The shader's new local matrix, or null to specify identity
         */
        SetLocalMatrix(
            [in] IMatrix* localM);
    }

    } // namespace Graphics
    } // namespace Droid
    } // namespace Elastos
}
