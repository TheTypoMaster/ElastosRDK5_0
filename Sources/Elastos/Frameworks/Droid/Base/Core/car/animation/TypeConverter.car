
module
{
    namespace Elastos {
    namespace Droid {
    namespace Animation {

    /**
     * Abstract base class used convert type T to another type V. This
     * is necessary when the value types of in animation are different
     * from the property type.
     * @see PropertyValuesHolder#setConverter(TypeConverter)
     */
    [local]
    interface ITypeConverter {
        /**
         * Returns the target converted type. Used by the animation system to determine
         * the proper setter function to call.
         * @return The Class to convert the input to.
         */
        GetTargetType(
            [out] InterfaceID* type);

        /**
         * Returns the source conversion type.
         */
        GetSourceType(
            [out] InterfaceID* type);

        /**
         * Converts a value from one type to another.
         * @param value The Object to convert.
         * @return A value of type V, converted from <code>value</code>.
         */
        Convert(
            [in] IInterface* t,
            [out] IInterface** v);
    }

    } // namespace Animation
    } // namepsace Droid
    } // namespace Elastos
}
