
module
{
    namespace Elastos {
    namespace Droid {
    namespace Media {

    interface IMediaActionSound {
        /**
         * The sound used by
         * {@link android.hardware.Camera#takePicture Camera.takePicture} to
         * indicate still image capture.
         * @see #play
         */
        const Int32 SHUTTER_CLICK         = 0;

        /**
         * A sound to indicate that focusing has completed. Because deciding
         * when this occurs is application-dependent, this sound is not used by
         * any methods in the media or camera APIs.
         * @see #play
         */
        const Int32 FOCUS_COMPLETE        = 1;

        /**
         * The sound used by
         * {@link android.media.MediaRecorder#start MediaRecorder.start()} to
         * indicate the start of video recording.
         * @see #play
         */
        const Int32 START_VIDEO_RECORDING = 2;

        /**
         * The sound used by
         * {@link android.media.MediaRecorder#stop MediaRecorder.stop()} to
         * indicate the end of video recording.
         * @see #play
         */
        const Int32 STOP_VIDEO_RECORDING  = 3;

        /**
         * Preload a predefined platform sound to minimize latency when the sound is
         * played later by {@link #play}.
         * @param soundName The type of sound to preload, selected from
         *         SHUTTER_CLICK, FOCUS_COMPLETE, START_VIDEO_RECORDING, or
         *         STOP_VIDEO_RECORDING.
         * @see #play
         * @see #SHUTTER_CLICK
         * @see #FOCUS_COMPLETE
         * @see #START_VIDEO_RECORDING
         * @see #STOP_VIDEO_RECORDING
         */
        Load(
            [in] Int32 soundName);

        /**
         * <p>Play one of the predefined platform sounds for media actions.</p>
         *
         * <p>Use this method to play a platform-specific sound for various media
         * actions. The sound playback is done asynchronously, with the same
         * behavior and content as the sounds played by
         * {@link android.hardware.Camera#takePicture Camera.takePicture},
         * {@link android.media.MediaRecorder#start MediaRecorder.start}, and
         * {@link android.media.MediaRecorder#stop MediaRecorder.stop}.</p>
         *
         * <p>Using this method makes it easy to match the default device sounds
         * when recording or capturing data through the preview callbacks, or when
         * implementing custom camera-like features in your
         * application.</p>
         *
         * <p>If the sound has not been loaded by {@link #load} before calling play,
         * play will load the sound at the cost of some additional latency before
         * sound playback begins. </p>
         *
         * @param soundName The type of sound to play, selected from
         *         SHUTTER_CLICK, FOCUS_COMPLETE, START_VIDEO_RECORDING, or
         *         STOP_VIDEO_RECORDING.
         * @see android.hardware.Camera#takePicture
         * @see android.media.MediaRecorder
         * @see #SHUTTER_CLICK
         * @see #FOCUS_COMPLETE
         * @see #START_VIDEO_RECORDING
         * @see #STOP_VIDEO_RECORDING
         */
        Play(
            [in] Int32 soundName);

        /**
         * Free up all audio resources used by this MediaActionSound instance. Do
         * not call any other methods on a MediaActionSound instance after calling
         * release().
         */
        ReleaseResources();
    }

    } // namespace media
    } // namepsace Droid
    } // namespace Elastos
}
