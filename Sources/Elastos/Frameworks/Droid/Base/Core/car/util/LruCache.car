module
{
    using interface Elastos.Utility.IMap;

    namespace Elastos {
    namespace Droid {
    namespace Utility {

    interface ILruCache {
        /**
         * Sets the size of the cache.
         *
         * @param maxSize The new maximum size.
         */
        Resize(
            [in] Int32 maxSize);

        /**
         * Returns the value for {@code key} if it exists in the cache or can be
         * created by {@code #create}. If a value was returned, it is moved to the
         * head of the queue. This returns null if a value is not cached and cannot
         * be created.
         */
        Get(
            [in] IInterface* key,
            [out] IInterface** outface);

        /**
         * Caches {@code value} for {@code key}. The value is moved to the head of
         * the queue.
         *
         * @return the previous value mapped by {@code key}.
         */
        Put(
            [in] IInterface* key,
            [in] IInterface* value,
            [out] IInterface** outface);

        /**
         * Remove the eldest entries until the total of remaining entries is at or
         * below the requested size.
         *
         * @param maxSize the maximum size of the cache before returning. May be -1
         *            to evict even 0-sized elements.
         */
        TrimToSize(
            [in] Int32 maxSize);

        /**
         * Removes the entry for {@code key} if it exists.
         *
         * @return the previous value mapped by {@code key}.
         */
        Remove(
            [in] IInterface* key,
            [out] IInterface** outface);

        /**
         * Clear the cache, calling {@link #entryRemoved} on each removed entry.
         */
        EvictAll();

        /**
         * For caches that do not override {@link #sizeOf}, this returns the number
         * of entries in the cache. For all other caches, this returns the sum of
         * the sizes of the entries in this cache.
         */
        GetSize(
            [out] Int32* value);

        /**
         * For caches that do not override {@link #sizeOf}, this returns the maximum
         * number of entries in the cache. For all other caches, this returns the
         * maximum sum of the sizes of the entries in this cache.
         */
        MaxSize(
            [out] Int32* value);

        /**
         * Returns the number of times {@link #get} returned a value that was
         * already present in the cache.
         */
        HitCount(
            [out] Int32* value);

        /**
         * Returns the number of times {@link #get} returned null or required a new
         * value to be created.
         */
        MissCount(
            [out] Int32* value);

        /**
         * Returns the number of times {@link #create(Object)} returned a value.
         */
        CreateCount(
            [out] Int32* value);

        /**
         * Returns the number of times {@link #put} was called.
         */
        PutCount(
            [out] Int32* value);

        /**
         * Returns the number of values that have been evicted.
         */
        EvictionCount(
            [out] Int32* value);

        /**
         * Returns a copy of the current contents of the cache, ordered from least
         * recently accessed to most recently accessed.
         */
        Snapshot(
            [out] IMap** outmap);

        ToString(
            [out] String* str);
    }

    } // namespace Utility
    } // namespace Droid
    } // namespace Elastos
}
