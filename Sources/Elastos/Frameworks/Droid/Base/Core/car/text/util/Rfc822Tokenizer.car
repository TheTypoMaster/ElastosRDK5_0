module
{
    using interface Elastos.Core.ICharSequence;
    using interface Elastos.Utility.IObjectContainer;
    interface Elastos.Droid.Text.Utility.IRfc822Token;

    namespace Elastos {
    namespace Droid {
    namespace Text {
    namespace Utility {

    /**
     * This class works as a Tokenizer for MultiAutoCompleteTextView for
     * address list fields, and also provides a method for converting
     * a string of addresses (such as might be typed into such a field)
     * into a series of Rfc822Tokens.
     */
    interface IRfc822Tokenizer extends Elastos.Droid.Widget.ITokenizer {}

    [deprecated]
    interface IRfc822TokenizerHelper{
        /**
         * This constructor will try to take a string like
         * "Foo Bar (something) &lt;foo\@google.com&gt;,
         * blah\@google.com (something)"
         * and convert it into one or more Rfc822Tokens, output into the supplied
         * collection.
         *
         * It does *not* decode MIME encoded-words; charset conversion
         * must already have taken place if necessary.
         * It will try to be tolerant of broken syntax instead of
         * returning an error.
         *
         */
        Tokenize(
            [in] ICharSequence* text,
            [in/*, out*/] IObjectContainer* ret);

        /**
         * This method will try to take a string like
         * "Foo Bar (something) &lt;foo\@google.com&gt;,
         * blah\@google.com (something)"
         * and convert it into one or more Rfc822Tokens.
         * It does *not* decode MIME encoded-words; charset conversion
         * must already have taken place if necessary.
         * It will try to be tolerant of broken syntax instead of
         * returning an error.
         */
        Tokenize(
            [in] ICharSequence* text,
            [out,callee] ArrayOf<IRfc822Token*>* ret);
    }

    }//namespace Utility
    }//namespace Text
    }//namespace Droid
    }//namespace Elastos

}
