module
{
    interface Elastos.Droid.Os.IParcelFileDescriptor;
    interface Elastos.Droid.App.Backup.IIBackupManager;

    namespace Elastos {
    namespace Droid {
    namespace App {

    /**
     * Interface presented by applications being asked to participate in the
     * backup & restore mechanism.  End user code will not typically implement
     * this interface directly; they subclass BackupAgent instead.
     *
     * {@hide}
     */
    [oneway]
    interface IIBackupAgent {
        /**
         * Request that the app perform an incremental backup.
         *
         * @param oldState Read-only file containing the description blob of the
         *        app's data state as of the last backup operation's completion.
         *        This file is empty or invalid when a full backup is being
         *        requested.
         *
         * @param data Read-write file, empty when onBackup() is called, that
         *        is the data destination for this backup pass's incrementals.
         *
         * @param newState Read-write file, empty when onBackup() is called,
         *        where the new state blob is to be recorded.
         *
         * @param token Opaque token identifying this transaction.  This must
         *        be echoed back to the backup service binder once the new
         *        data has been written to the data and newState files.
         *
         * @param callbackBinder Binder on which to indicate operation completion,
         *        passed here as a convenience to the agent.
         */
        DoBackup(
            [in] IParcelFileDescriptor* oldState,
            [in] IParcelFileDescriptor* data,
            [in] IParcelFileDescriptor* newState,
            [in] Int32 token,
            [in] IIBackupManager* callbackBinder);

        /**
         * Restore an entire data snapshot to the application.
         *
         * @param data Read-only file containing the full data snapshot of the
         *        app's backup.  This is to be a <i>replacement</i> of the app's
         *        current data, not to be merged into it.
         *
         * @param appVersionCode The android:versionCode attribute of the application
         *        that created this data set.  This can help the agent distinguish among
         *        various historical backup content possibilities.
         *
         * @param newState Read-write file, empty when onRestore() is called,
         *        that is to be written with the state description that holds after
         *        the restore has been completed.
         *
         * @param token Opaque token identifying this transaction.  This must
         *        be echoed back to the backup service binder once the agent is
         *        finished restoring the application based on the restore data
         *        contents.
         *
         * @param callbackBinder Binder on which to indicate operation completion,
         *        passed here as a convenience to the agent.
         */
        DoRestore(
            [in] IParcelFileDescriptor* data,
            [in] Int32 appVersionCode,
            [in] IParcelFileDescriptor* newState,
            [in] Int32 token,
            [in] IIBackupManager* callbackBinder);

        /**
         * Perform a "full" backup to the given file descriptor.  The output file is presumed
         * to be a socket or other non-seekable, write-only data sink.  When this method is
         * called, the app should write all of its files to the output.
         *
         * @param data Write-only file to receive the backed-up file content stream.
         *        The data must be formatted correctly for the resulting archive to be
         *        legitimate, so that will be tightly controlled by the available API.
         *
         * @param token Opaque token identifying this transaction.  This must
         *        be echoed back to the backup service binder once the agent is
         *        finished restoring the application based on the restore data
         *        contents.
         *
         * @param callbackBinder Binder on which to indicate operation completion,
         *        passed here as a convenience to the agent.
         */
        DoFullBackup(
            [in] IParcelFileDescriptor* data,
            [in] Int32 token,
            [in] IIBackupManager* callbackBinder);

        /**
         * Restore a single "file" to the application.  The file was typically obtained from
         * a full-backup dataset.  The agent reads 'size' bytes of file content
         * from the provided file descriptor.
         *
         * @param data Read-only pipe delivering the file content itself.
         *
         * @param size Size of the file being restored.
         * @param type Type of file system entity, e.g. FullBackup.TYPE_DIRECTORY.
         * @param domain Name of the file's semantic domain to which the 'path' argument is a
         *        relative path.  e.g. FullBackup.DATABASE_TREE_TOKEN.
         * @param path Relative path of the file within its semantic domain.
         * @param mode Access mode of the file system entity, e.g. 0660.
         * @param mtime Last modification time of the file system entity.
         */
        DoRestoreFile(
            [in] IParcelFileDescriptor* data,
            [in] Int64 size,
            [in] Int32 type,
            [in] String domainName,
            [in] String path,
            [in] Int64 mode,
            [in] Int64 mtime,
            [in] Int32 token,
            [in] IIBackupManager* callbackBinder);
    }

    } // namespace App
    } // namespace Droid
    } // namespace Elastos
}
