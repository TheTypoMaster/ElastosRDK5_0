module
{
    interface Elastos.Droid.Os.IParcelFileDescriptor;
    interface Elastos.Droid.App.Backup.IBackupDataOutput;
    interface Elastos.Droid.App.Backup.IBackupDataInputStream;

    namespace Elastos {
    namespace Droid {
    namespace App {
    namespace Backup {

    /* extends FileBackupHelperBase implements BackupHelper */
    /**
     * @Involve
     * interface IFileBackupHelperBase
     */
    interface IWallpaperBackupHelper {
        // Use old keys to keep legacy data compatibility and avoid writing two wallpapers
        const String WALLPAPER_IMAGE_KEY =
                "/data/data/com.android.settings/files/wallpaper";
        const String WALLPAPER_INFO_KEY = "/data/system/wallpaper_info.xml";
        /**
         * Based on oldState, determine which of the files from the application's data directory
         * need to be backed up, write them to the data stream, and fill in newState with the
         * state as it exists now.
         */
        PerformBackup(
            [in] IParcelFileDescriptor* oldState,
            [in] IBackupDataOutput* data,
            [in] IParcelFileDescriptor* newState);

        /**
         * Restore one absolute file entity from the restore stream.  If we're restoring the
         * magic wallpaper file, take specific action to determine whether it is suitable for
         * the current device.
         */
        RestoreEntity(
            [in] IBackupDataInputStream* data);
    }

    [local]
    interface IWallpaperBackupHelperHelper {
        // This path must match what the WallpaperManagerService uses
        // TODO: Will need to change if backing up non-primary user's
        // wallpaper
        GetWALLPAPER_IMAGE(
            [out] String* image);

        GetWALLPAPER_INFO(
            [out] String* info);

    }

    } // namespace Backup
    } // namespace App
    } // namespace Droid
    } // namespace Elastos
}
