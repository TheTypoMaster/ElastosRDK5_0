module
{
    interface Elastos.Droid.App.Backup.IIRestoreObserver;

    namespace Elastos {
    namespace Droid {
    namespace App {
    namespace Backup {

    /**
     * Binder interface used by clients who wish to manage a restore operation.  Every
     * method in this interface requires the android.permission.BACKUP permission.
     *
     * {@hide}
     */
    interface IIRestoreSession {
        /**
         * Ask the current transport what the available restore sets are.
         *
         * @param observer This binder points to an object whose onRestoreSetsAvailable()
         *   method will be called to supply the results of the transport's lookup.
         * @return Zero on success; nonzero on error.  The observer will only receive a
         *   result callback if this method returned zero.
         */
        GetAvailableRestoreSets(
            [in] IIRestoreObserver* observer,
            [out] Int32* result);

        /**
         * Restore the given set onto the device, replacing the current data of any app
         * contained in the restore set with the data previously backed up.
         *
         * <p>Callers must hold the android.permission.BACKUP permission to use this method.
         *
         * @return Zero on success; nonzero on error.  The observer will only receive
         *   progress callbacks if this method returned zero.
         * @param token The token from getAvailableRestoreSets() corresponding to
         *   the restore set that should be used.
         *
         * @sa getAvailableRestoreSets()
         * @param observer If non-null, this binder points to an object that will receive
         *   progress callbacks during the restore operation.
         */
        RestoreAll(
            [in] Int64 token,
            [in] IIRestoreObserver* observer,
            [out] Int32* value);

        /**
         * Restore select packages from the given set onto the device, replacing the
         * current data of any app contained in the set with the data previously
         * backed up.
         *
         * <p>Callers must hold the android.permission.BACKUP permission to use this method.
         *
         * @return Zero on success, nonzero on error. The observer will only receive
         *   progress callbacks if this method returned zero.
         * @param token The token from getAvailableRestoreSets() corresponding to
         *   the restore set that should be used.
         *
         * @sa getAvailableRestoreSets()
         * @param observer If non-null, this binder points to an object that will receive
         *   progress callbacks during the restore operation.
         * @param packages The set of packages for which to attempt a restore.  Regardless of
         *   the contents of the actual back-end dataset named by {@code token}, only
         *   applications mentioned in this list will have their data restored.
         */
        RestoreSome(
            [in] Int64 token,
            [in] IIRestoreObserver* observer,
            [in] ArrayOf<String> packages,
            [out] Int32* success);

        /**
         * Restore a single application from backup.  The data will be restored from the
         * current backup dataset if the given package has stored data there, or from
         * the dataset used during the last full device setup operation if the current
         * backup dataset has no matching data.  If no backup data exists for this package
         * in either source, a nonzero value will be returned.
         *
         * @return Zero on success; nonzero on error.  The observer will only receive
         *   progress callbacks if this method returned zero.
         * @param packageName The name of the package whose data to restore.  If this is
         *   not the name of the caller's own package, then the android.permission.BACKUP
         *   permission must be held.
         * @param observer If non-null, this binder points to an object that will receive
         *   progress callbacks during the restore operation.
         */
        RestorePackage(
            [in] String packageName,
            [in] IIRestoreObserver* observer,
            [out] Int32* value);

        /**
         * End this restore session.  After this method is called, the IRestoreSession binder
         * is no longer valid.
         *
         * <p><b>Note:</b> The caller <i>must</i> invoke this method to end the restore session,
         *   even if getAvailableRestoreSets or performRestore failed.
         *
         * @sa getAvailableRestoreSets
         * @sa performRestore
         */
        EndRestoreSession();
    }

    } // namespace Backup
    } // namespace App
    } // namespace Droid
    } // namespace Elastos
}
