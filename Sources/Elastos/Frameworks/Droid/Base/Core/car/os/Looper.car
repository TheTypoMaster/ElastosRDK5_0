module
{
    using interface Elastos.Core.Threading.IThread;

    interface Elastos.Droid.Os.IMessageQueue;
    interface Elastos.Droid.Utility.IPrinter;

    namespace Elastos {
    namespace Droid {
    namespace Os {

    interface ILooper {
        SetCallbackLogging(
            [in] IPrinter* printer);

        /**
         * Quits the looper.
         *
         * Causes the {@link #loop} method to terminate as soon as possible.
         */
        Quit();

        /**
         * Return the Thread associated with this Looper.
         */
        GetThread(
            [out] IThread** thread);

        GetQueue(
            [out] IMessageQueue** queue);

        /**
         * Posts a synchronization barrier to the Looper's message queue.
         *
         * Message processing occurs as usual until the message queue encounters the
         * synchronization barrier that has been posted.  When the barrier is encountered,
         * later synchronous messages in the queue are stalled (prevented from being executed)
         * until the barrier is released by calling {@link #removeSyncBarrier} and specifying
         * the token that identifies the synchronization barrier.
         *
         * This method is used to immediately postpone execution of all subsequently posted
         * synchronous messages until a condition is met that releases the barrier.
         * Asynchronous messages (see {@link Message#isAsynchronous} are exempt from the barrier
         * and continue to be processed as usual.
         *
         * This call must be always matched by a call to {@link #removeSyncBarrier} with
         * the same token to ensure that the message queue resumes normal operation.
         * Otherwise the application will probably hang!
         *
         * @return A token that uniquely identifies the barrier.  This token must be
         * passed to {@link #removeSyncBarrier} to release the barrier.
         *
         * @hide
         */
        PostSyncBarrier(
            [out] Int32* token);

        /**
         * Removes a synchronization barrier.
         *
         * @param token The synchronization barrier token that was returned by
         * {@link #postSyncBarrier}.
         *
         * @throws IllegalStateException if the barrier was not found.
         *
         * @hide
         */
        RemoveSyncBarrier(
            [in] Int32 token);
    }

    interface ILooperHelper {
        Prepare();

        MyLooper(
            [out] ILooper** looper);

        MyQueue(
            [out] IMessageQueue** queue);

        GetMainLooper(
            [out] ILooper** looper);

        Loop();
    }

    } // namespace Os
    } // namespace Droid
    } // namespace Elastos
}
