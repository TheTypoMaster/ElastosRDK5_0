module
{
    using interface Elastos.Core.IClassLoader;
    using interface Elastos.Core.ICharSequence;
    using interface Elastos.Core.IInteger32;
    using interface Elastos.IO.ISerializable;
    using interface Elastos.Utility.IMap;
    using interface Elastos.Utility.IArrayList;

    interface Elastos.Droid.Os.IBinder;
    interface Elastos.Droid.Utility.ISize;
    interface Elastos.Droid.Utility.ISizeF;

    namespace Elastos {
    namespace Droid {
    namespace Os {

    /**
     * Involve
     * interface IBaseBundle
     * interface ICloneable
     * interface IParcelable
     */
    [deprecated, local, parcelable]
    interface IBundle {
        /** @hide */
        GetPairValue(
            [out] String* val);

        /** @hide */
        SetClassLoader(
            [in] IClassLoader* loader);

        /** @hide */
        GetClassLoader(
            [out] IClassLoader** loader);

        /** @hide */
        SetAllowFds(
            [in] Boolean allowFds);

        SetAllowFds(
            [in] Boolean allowFds,
            [out] Boolean* prev);

        PutAll(
            [in] IBundle* bundle);

        HasFileDescriptors(
            [out] Boolean* result);

        PutBoolean(
            [in] String key,
            [in] Boolean value);

        PutByte(
            [in] String key,
            [in] Byte value);

        PutChar(
            [in] String key,
            [in] Char32 value);

        PutInt16(
            [in] String key,
            [in] Int16 value);

        PutInt32(
            [in] String key,
            [in] Int32 value);

        PutInt64(
            [in] String key,
            [in] Int64 value);

        PutFloat(
            [in] String key,
            [in] Float value);

        PutDouble(
            [in] String key,
            [in] Double value);

        PutString(
            [in] String key,
            [in] String value);

        PutCharSequence(
            [in] String key,
            [in] ICharSequence* value);

        PutParcelable(
            [in] String key,
            [in] IParcelable* value);

        PutSize(
            [in] String key,
            [in] ISize* value);

        PutSizeF(
            [in] String key,
            [in] ISizeF* value);

        PutParcelableArray(
            [in] String key,
            [in] ArrayOf<IParcelable*>* value);

        PutParcelableArrayList(
            [in] String key,
            [in] IArrayList* value);

        PutSparseParcelableArray(
            [in] String key,
            [in] IMap* value);

        PutIntegerArrayList(
            [in] String key,
            [in] IArrayList* value);

        PutStringArrayList(
            [in] String key,
            [in] IArrayList* value);

        PutCharSequenceArrayList(
            [in] String key,
            [in] IArrayList* value);

         PutSerializable(
            [in] String key,
            [in] ISerializable* value);

        PutBooleanArray(
            [in] String key,
            [in] ArrayOf<Boolean>* value);

        PutByteArray(
            [in] String key,
            [in] ArrayOf<Byte>* value);

        PutInt16Array(
            [in] String key,
            [in] ArrayOf<Int16>* value);

        PutCharArray(
            [in] String key,
            [in] ArrayOf<Char32>* value);

        PutInt32Array(
            [in] String key,
            [in] ArrayOf<Int32>* value);

        PutInt64Array(
            [in] String key,
            [in] ArrayOf<Int64>* value);

        PutFloatArray(
            [in] String key,
            [in] ArrayOf<Float>* value);

        PutDoubleArray(
            [in] String key,
            [in] ArrayOf<Double>* value);

        PutStringArray(
            [in] String key,
            [in] ArrayOf<String>* value);

        PutCharSequenceArray(
            [in] String key,
            [in] ArrayOf<ICharSequence*>* value);

        PutBundle(
            [in] String key,
            [in] IBundle* value);

        PutBinder(
            [in] String key,
            [in] IBinder* value);

        PutIBinder(
            [in] String key,
            [in] IBinder* value);

        GetBoolean(
            [in] String key,
            [out] Boolean* value);

        GetBoolean(
            [in] String key,
            [in] Boolean defaultValue,
            [out] Boolean* value);

        GetByte(
            [in] String key,
            [out] Byte* value);

        GetByte(
            [in] String key,
            [in] Byte defaultValue,
            [out] Byte* value);

        GetChar(
            [in] String key,
            [out] Char32* value);

        GetChar(
            [in] String key,
            [in] Char32 defaultValue,
            [out] Char32* value);

        GetInt16(
            [in] String key,
            [out] Int16* value);

        GetInt16(
            [in] String key,
            [in] Int16 defaultValue,
            [out] Int16* value);

        GetInt32(
            [in] String key,
            [out] Int32* value);

        GetInt32(
            [in] String key,
            [in] Int32 defaultValue,
            [out] Int32* value);

        GetInt64(
            [in] String key,
            [out] Int64* value);

        GetInt64(
            [in] String key,
            [in] Int64 defaultValue,
            [out] Int64* value);

        GetFloat(
            [in] String key,
            [out] Float* value);

        GetFloat(
            [in] String key,
            [in] Float defaultValue,
            [out] Float* value);

        GetDouble(
            [in] String key,
            [out] Double* value);

        GetDouble(
            [in] String key,
            [in] Double defaultValue,
            [out] Double* value);

        GetString(
            [in] String key,
            [out] String* value);

        GetString(
            [in] String key,
            [in] String defaultValue,
            [out] String* value);

        GetCharSequence(
            [in] String key,
            [out] ICharSequence** value);

        GetSize(
            [in] String key,
            [out] ISize** value);

        GetSizeF(
            [in] String key,
            [out] ISizeF** value);

        GetBundle(
            [in] String key,
            [out] IBundle** value);

        GetParcelable(
            [in] String key,
            [out] IParcelable** value);

        GetParcelableArray(
            [in] String key,
            [out, callee] ArrayOf<IParcelable*>* value);

        GetParcelableArrayList(
            [in] String key,
            [out] IArrayList** value);

        GetSparseParcelableArray(
            [in] String key,
            [out] IMap** value);

        GetSerializable(
            [in] String key,
            [out] ISerializable** result);

        GetIntegerArrayList(
            [in] String key,
            [out] IArrayList** value);

        GetStringArrayList(
            [in] String key,
            [out] IArrayList** value);

        GetCharSequenceArrayList(
            [in] String key,
            [out] IArrayList** value);

        GetBooleanArray(
            [in] String key,
            [out, callee] ArrayOf<Boolean>* value);

        GetByteArray(
            [in] String key,
            [out, callee] ArrayOf<Byte>* value);

        GetInt16Array(
            [in] String key,
            [out, callee] ArrayOf<Int16>* value);

        GetCharArray(
            [in] String key,
            [out, callee] ArrayOf<Char32>* value);

        GetInt32Array(
            [in] String key,
            [out, callee] ArrayOf<Int32>* value);

        GetInt64Array(
            [in] String key,
            [out, callee] ArrayOf<Int64>* value);

        GetFloatArray(
            [in] String key,
            [out, callee] ArrayOf<Float>* value);

        GetDoubleArray(
            [in] String key,
            [out, callee] ArrayOf<Double>* value);

        GetStringArray(
            [in] String key,
            [out, callee] ArrayOf<String>* value);

        GetCharSequenceArray(
            [in] String key,
            [out, callee] ArrayOf<ICharSequence*>* value);

        GetBinder(
            [in] String key,
            [out] IBinder** value);

        GetIBinder(
            [in] String key,
            [out] IBinder** value);
    }

    interface IBundleHelper {
        GetEMPTY(
            [out] IBundle** bundle);

        ForPair(
            [in] String key,
            [in] String value,
            [out] IBundle** bundle);
    }

    } // namespace Os
    } // namespace Droid
    } // namespace Elastos

} // module
