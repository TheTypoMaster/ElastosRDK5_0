module
{
    namespace Elastos {
    namespace Droid {
    namespace Os {

    /**
     * This class is used to retrieved various statistics about the memory mappings for this
     * process. The returns info broken down by dalvik, native, and other. All results are in kB.
     */
    /**
     * @Involve
     * interface IParcelable;
     */
    interface IDebugMemoryInfo {

        /** @hide */
        const Int32 NUM_OTHER_STATS = 16;

        /** @hide */
        const Int32 NUM_DVK_STATS = 5;

        /** @hide */
        const Int32 NUM_CATEGORIES = 7;

        /** @hide */
        const Int32 OffsetPss = 0;
        /** @hide */
        const Int32 OffsetSwappablePss = 1;
        /** @hide */
        const Int32 OffsetPrivateDirty = 2;
        /** @hide */
        const Int32 OffsetSharedDirty = 3;
        /** @hide */
        const Int32 OffsetPrivateClean = 4;
        /** @hide */
        const Int32 OffsetSharedClean = 5;
        /** @hide */
        const Int32 OffsetSwappedOut = 6;

        GetTotalPss(
            [out] Int32* totalPss);

        GetTotalUss(
            [out] Int32* result);

        GetTotalSwappablePss(
            [out] Int32* result);

        GetTotalPrivateDirty(
            [out] Int32* totalPrivateDirty);

        GetTotalSharedDirty(
            [out] Int32* totalSharedDirty);

        GetOtherPss(
            [in] Int32 which,
            [out] Int32* otherPss);

        GetOtherPrivateDirty(
            [in] Int32 which,
            [out] Int32* otherPrivateDirty);

        GetOtherSharedDirty(
            [in] Int32 which,
            [out] Int32* otherSharedDirty);

        GetDalvikPss(
            [out] Int32* dalvikPss);

        SetDalvikPss(
            [in] Int32 dalvikPss);

        GetDalvikPrivateDirty(
            [out] Int32* dalvikPrivateDirty);

        SetDalvikPrivateDirty(
            [in] Int32 dalvikPrivateDirty);

        GetDalvikSharedDirty(
            [out] Int32* dalvikSharedDirty);

        SetDalvikSharedDirty(
            [in] Int32 dalvikSharedDirty);

        GetNativePss(
            [out] Int32* nativePss);

        SetNativePss(
            [in] Int32 nativePss);

        GetNativePrivateDirty(
            [out] Int32* nativePrivateDirty);

        SetNativePrivateDirty(
            [in] Int32 nativePrivateDirty);

        GetNativeSharedDirty(
            [out] Int32* nativeSharedDirty);

        SetNativeSharedDirty(
            [in] Int32 nativeSharedDirty);

        GetOtherPss(
            [out] Int32* otherPss);

        SetOtherPss(
            [in] Int32 otherPss);

        GetOtherPrivateDirty(
            [out] Int32* otherPrivateDirty);

        SetOtherPrivateDirty(
            [in] Int32 otherPrivateDirty);

        GetOtherSharedDirty(
            [out] Int32* otherSharedDirty);

        SetOtherSharedDirty(
            [in] Int32 otherSharedDirty);
    }

    interface IDebugMemoryInfoHelper {
        GetOtherLabel(
            [in] Int32 which,
            [out] String* label);
    }

    } // namespace Os
    } // namespace Droid
    } // namespace Elastos
}
