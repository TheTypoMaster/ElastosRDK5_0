
module
{
    namespace Elastos {
    namespace Droid {
    namespace Os {

    enum SystemServiceState {
        SystemServiceState_RUNNING,
        SystemServiceState_STOPPING,
        SystemServiceState_STOPPED,
        SystemServiceState_RESTARTING,
    }

    [deprecated]
    interface ISystemService {
        /** Request that the init daemon start a named service. */
        Start(
            [in] String name);

        /** Request that the init daemon stop a named service. */
        Stop(
            [in] String name);

        /** Request that the init daemon restart a named service. */
        Restart(
            [in] String name);

        /**
         * Return current state of given service.
         */
        GetState(
            [in] String service,
            [out] SystemServiceState* state);

        /**
         * Check if given service is {@link State#STOPPED}.
         */
        IsStopped(
            [in] String service,
            [out] Boolean* isStopped);

        /**
         * Check if given service is {@link State#RUNNING}.
         */
        IsRunning(
            [in] String service,
            [out] Boolean* isRunning);

        /**
         * Wait until given service has entered specific state.
         */
        WaitForState(
            [in] String service,
            [in] SystemServiceState state,
            [in] Int64 timeoutMillis);

        /**
         * Wait until any of given services enters {@link State#STOPPED}.
         */
        WaitForAnyStopped(
            [in] ArrayOf<String>* services);
    }

    } // namespace Os
    } // namespace Droid
    } // namespace Elastos
}
