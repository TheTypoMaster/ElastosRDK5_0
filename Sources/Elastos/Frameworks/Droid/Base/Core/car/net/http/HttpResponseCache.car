module
{
    using interface Elastos.IO.IFile;

    namespace Elastos {
    namespace Droid {
    namespace Net {
    namespace Http {

    interface IHttpResponseCache extends Elastos.Net.IResponseCache {
        /**
         * Returns the number of bytes currently being used to store the values in
         * this cache. This may be greater than the {@link #maxSize} if a background
         * deletion is pending.
         */
        Size(
            [out] Int64* size);

        /**
         * Returns the maximum number of bytes that this cache should use to store
         * its data.
         */
        MaxSize(
            [out] Int64* maxSize);

        /**
         * Force buffered operations to the filesystem. This ensures that responses
         * written to the cache will be available the next time the cache is opened,
         * even if this process is killed.
         */
        Flush();

        /**
         * Returns the number of HTTP requests that required the network to either
         * supply a response or validate a locally cached response.
         */
        GetNetworkCount(
            [out] Int32* count);

        /**
         * Returns the number of HTTP requests whose response was provided by the
         * cache. This may include conditional {@code GET} requests that were
         * validated over the network.
         */
        GetHitCount(
            [out] Int32* count);

        /**
         * Returns the total number of HTTP requests that were made. This includes
         * both client requests and requests that were made on the client's behalf
         * to handle a redirects and retries.
         */
        GetRequestCount(
            [out] Int32* count);

        /**
         * Uninstalls the cache and releases any active resources. Stored contents
         * will remain on the filesystem.
         */
        Close();

        /**
         * Uninstalls the cache and deletes all of its stored contents.
         */
        Delete();
    }

    interface IHttpResponseCacheHelper {
        /**
         * Returns the currently-installed {@code HttpResponseCache}, or null if
         * there is no cache installed or it is not a {@code HttpResponseCache}.
         */
        GetInstalled(
            [out] IHttpResponseCache** cache);

        /**
         * Creates a new HTTP response cache and {@link ResponseCache#setDefault
         * sets it} as the system default cache.
         *
         * @param directory the directory to hold cache data.
         * @param maxSize the maximum size of the cache in bytes.
         * @return the newly-installed cache
         * @throws IOException if {@code directory} cannot be used for this cache.
         *     Most applications should respond to this exception by logging a
         *     warning.
         */
        Install(
            [in] IFile* directory,
            [in] Int64 maxSize,
            [out] IHttpResponseCache** cache);
    }

    } // namespace Http
    } // namespace Net
    } // namespace Droid
    } // namespace Elastos
}
