
module
{
    using interface Elastos.IO.IFile;
    interface Elastos.Droid.Content.IContext;
    interface Elastos.Droid.Content.IIntent;
    interface Elastos.Droid.Os.IHandler;
    interface Elastos.Droid.Os.ILooper;
    interface Elastos.Droid.Os.IUserHandle;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Content {

    /**
     * Helper class for monitoring the state of packages: adding, removing,
     * updating, and disappearing and reappearing on the SD card.
     */
    [deprecated, local]
    interface IPackageMonitor extends Elastos.Droid.Content.IBroadcastReceiver {
        const Int32 PACKAGE_UNCHANGED = 0;
        const Int32 PACKAGE_UPDATING = 1;
        const Int32 PACKAGE_TEMPORARY_CHANGE = 2;
        const Int32 PACKAGE_PERMANENT_CHANGE = 3;

        Register(
            [in] IContext* ctx,
            [in] ILooper* thread,
            [in] Boolean externalStorage);

        RegisterEx(
            [in] IContext* ctx,
            [in] ILooper* thread,
            [in] IUserHandle* user,
            [in] Boolean externalStorage);

        GetRegisteredHandler(
            [out] IHandler** handler);

        Unregister();

        OnBeginPackageChanges();

        /**
         * Called when a package is really added (and not replaced).
         */
        OnPackageAdded(
            [in] String packageName,
            [in] Int32 uid);

        /**
         * Called when a package is really removed (and not replaced).
         */
        OnPackageRemoved(
            [in] String packageName,
            [in] Int32 uid);

        /**
         * Called when a package is really removed (and not replaced) for
         * all users on the device.
         */
        OnPackageRemovedAllUsers(
            [in] String packageName,
            [in] Int32 uid);

        OnPackageUpdateStarted(
            [in] String packageName,
            [in] Int32 uid);

        OnPackageUpdateFinished(
            [in] String packageName,
            [in] Int32 uid);

        OnPackageChanged(
            [in] String packageName,
            [in] Int32 uid,
            [in] ArrayOf<String>* components);

        OnHandleForceStop(
            [in] IIntent* intent,
            [in] ArrayOf<String>* packages,
            [in] Int32 uid,
            [in] Boolean doit,
            [out] Boolean* result);

        OnHandleUserStop(
            [in] IIntent* intent,
            [in] Int32 userHandle);

        OnUidRemoved(
            [in] Int32 uid);

        OnPackagesAvailable(
            [in] ArrayOf<String>* packages);

        OnPackagesUnavailable(
            [in] ArrayOf<String>* packages);

        /**
         * Called when a package disappears for any reason.
         */
        OnPackageDisappeared(
            [in] String packageName,
            [in] Int32 reason);

        /**
         * Called when a package appears for any reason.
         */
        OnPackageAppeared(
            [in] String packageName,
            [in] Int32 reason);

        OnPackageModified(
            [in] String packageName);

        DidSomePackagesChange(
            [out] Boolean* isChanged);

        IsPackageAppearing(
            [in] String packageName,
            [out] Int32* result);

        AnyPackagesAppearing(
            [out] Boolean* result);

        IsPackageDisappearing(
            [in] String packageName,
            [out] Int32* result);

        AnyPackagesDisappearing(
            [out] Boolean* result);

        IsPackageModified(
            [in] String packageName,
            [out] Boolean* isModified);

        OnSomePackagesChanged();

        OnFinishPackageChanges();

        GetChangingUserId(
            [out] Int32* userId);
    }

    } // namespace Content
    } // namespace Internal
    } // namespace Droid
    } // namespace Elastos
}
