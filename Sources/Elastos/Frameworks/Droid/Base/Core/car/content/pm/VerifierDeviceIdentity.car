
module
{
    namespace Elastos {
    namespace Droid {
    namespace Content {
    namespace Pm {

    /**
     * An identity that uniquely identifies a particular device. In this
     * implementation, the identity is represented as a 64-bit integer encoded to a
     * 13-character string using RFC 4648's Base32 encoding without the trailing
     * padding. This makes it easy for users to read and write the code without
     * confusing 'I' (letter) with '1' (one) or 'O' (letter) with '0' (zero).
     *
     * @hide
     */
    /**
     * @Involve
     * interface IParcelable;
     */
    interface IVerifierDeviceIdentity {
        Equals(
            [in] IInterface* obj,
            [out] Boolean* isEquals);

        GetHashCode(
            [out] Int32* hashCode);

        ToString(
            [out] String* str);
    }

    interface IVerifierDeviceIdentityHelper {
        /**
         * Generate a new device identity.
         *
         * @return random uniformly-distributed device identity
         */
        Generate(
            [out] IVerifierDeviceIdentity** identity);

        Parse(
            [in] String deviceIdentity,
            [out] IVerifierDeviceIdentity** identity);
    }

    } // namespace Pm
    } // namespace Content
    } // namespace Droid
    } // namespace Elastos
}
