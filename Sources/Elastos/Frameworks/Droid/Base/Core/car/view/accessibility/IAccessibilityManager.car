
module
{
    using interface Elastos.Core.IObjectContainer;
    interface Elastos.Droid.View.IIWindow;
    interface Elastos.Droid.Content.IComponentName;
    interface Elastos.Droid.AccessibilityService.IAccessibilityServiceInfo;
    interface Elastos.Droid.AccessibilityService.IAccessibilityServiceClient;

    namespace Elastos {
    namespace Droid {
    namespace View {
    namespace Accessibility {

    [deprecated]
    interface IIAccessibilityManager {
        AddClient(
            [in] IAccessibilityManagerClient* client,
            [in] Int32 userId,
            [out] Int32* result);

        SendAccessibilityEvent(
            [in] IAccessibilityEvent* uiEvent,
            [in] Int32 userId,
            [out] Boolean* result);

        GetInstalledAccessibilityServiceList(
            [in] Int32 userId,
            [out] IObjectContainer** services);

        GetEnabledAccessibilityServiceList(
            [in] Int32 feedbackType,
            [in] Int32 userId,
            [out] IObjectContainer** services);

        Interrupt(
            [in] Int32 userId);

        AddAccessibilityInteractionConnection(
            [in] IIWindow* windowToken,
            [in] IAccessibilityInteractionConnection* connection,
            [in] Int32 userId,
            [out] Int32* result);

        RemoveAccessibilityInteractionConnection(
            [in] IIWindow* windowToken);

        RegisterUiTestAutomationService(
            [in] IAccessibilityServiceClient* client,
            [in] IAccessibilityServiceInfo* info);

        UnregisterUiTestAutomationService(
            [in] IAccessibilityServiceClient* client);

        TemporaryEnableAccessibilityStateUntilKeyguardRemoved(
            [in] IComponentName* service,
            [in] Boolean touchExplorationEnabled);
    }

    } // namespace Accessibility
    } // namespace View
    } // namepsace Droid
    } // namespace Elastos
}
