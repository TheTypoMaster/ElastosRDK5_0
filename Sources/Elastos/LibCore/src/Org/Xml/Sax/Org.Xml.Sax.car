
module
{
    importlib("Elastos.Core.eco");

    merge("../../../../../car/Org/Xml/Sax/Exceptions.car");
    merge("../../../../../car/Org/Xml/Sax/IAttributeList.car");
    merge("../../../../../car/Org/Xml/Sax/IAttributes.car");
    merge("../../../../../car/Org/Xml/Sax/IContentHandler.car");
    merge("../../../../../car/Org/Xml/Sax/IDocumentHandler.car");
    merge("../../../../../car/Org/Xml/Sax/IDTDHandler.car");
    merge("../../../../../car/Org/Xml/Sax/IEntityResolver.car");
    merge("../../../../../car/Org/Xml/Sax/IErrorHandler.car");
    merge("../../../../../car/Org/Xml/Sax/IInputSource.car");
    merge("../../../../../car/Org/Xml/Sax/ILocator.car");
    merge("../../../../../car/Org/Xml/Sax/IParser.car");
    merge("../../../../../car/Org/Xml/Sax/IXMLReader.car");
    merge("../../../../../car/Org/Xml/Sax/IXMLFilter.car");

    merge("../../../../../car/Org/Xml/Sax/Helpers/IAttributeListImpl.car");
    merge("../../../../../car/Org/Xml/Sax/Helpers/IAttributesImpl.car");
    merge("../../../../../car/Org/Xml/Sax/Helpers/ILocatorImpl.car");
    merge("../../../../../car/Org/Xml/Sax/Helpers/INamespaceSupport.car");
    merge("../../../../../car/Org/Xml/Sax/Helpers/IParserFactory.car");
    merge("../../../../../car/Org/Xml/Sax/Helpers/IXMLReaderFactory.car");

    merge("../../../../../car/Org/Xml/Sax/Ext/IAttributes2.car");
    merge("../../../../../car/Org/Xml/Sax/Ext/IAttributes2Impl.car");
    merge("../../../../../car/Org/Xml/Sax/Ext/IDeclHandler.car");
    merge("../../../../../car/Org/Xml/Sax/Ext/IEntityResolver2.car");
    merge("../../../../../car/Org/Xml/Sax/Ext/ILexicalHandler.car");
    merge("../../../../../car/Org/Xml/Sax/Ext/ILocator2.car");
    merge("../../../../../car/Org/Xml/Sax/Ext/ILocator2Impl.car");

    using interface Elastos.IO.IInputStream;
    using interface Elastos.IO.IReader;

    interface Org.Xml.Sax.IAttributes;
    interface Org.Xml.Sax.IAttributeList;
    interface Org.Xml.Sax.ILocator;
    interface Org.Xml.Sax.IEntityResolver;
    interface Org.Xml.Sax.IDTDHandler;
    interface Org.Xml.Sax.IParser;
    interface Org.Xml.Sax.IXMLFilter;
    interface Org.Xml.Sax.IXMLReader;
    interface Org.Xml.Sax.IContentHandler;
    interface Org.Xml.Sax.IDocumentHandler;
    interface Org.Xml.Sax.IErrorHandler;
    interface Org.Xml.Sax.Ext.ILexicalHandler;
    interface Org.Xml.Sax.Ext.IDeclHandler;
    interface Org.Xml.Sax.Ext.IEntityResolver2;

    namespace Org {
    namespace Xml {
    namespace Sax {

        class CInputSource {
            constructor();

            constructor(
                [in] String str);

            constructor(
                [in] IInputStream* inputStream);

            constructor(
                [in] IReader* reader);

            interface IInputSource;
        }

        class CHandlerBase {
            interface IEntityResolver;
            interface IDTDHandler;
            interface IDocumentHandler;
            interface IErrorHandler;
        }

        namespace Helpers {

            class CAttributeListImpl {
                constructor();

                constructor(
                    [in] IAttributeList* atts);

                interface IAttributeList;
                interface IAttributeListImpl;
            }

            class CAttributesImpl {
                constructor();

                constructor(
                    [in] IAttributes* atts);

                interface IAttributes;
                interface IAttributesImpl;
            }

            class CLocatorImpl {
                constructor();

                constructor(
                    [in] ILocator* locator);

                interface ILocator;
                interface ILocatorImpl;
            }

            class CNamespaceSupport {
                constructor();

                interface INamespaceSupport;
            }

            singleton class CParserFactory {
                interface IParserFactory;
            }

            singleton class CXMLReaderFactory {
                interface IXMLReaderFactory;
            }

            class CDefaultHandler {
                interface IEntityResolver;
                interface IDTDHandler;
                interface IContentHandler;
                interface IErrorHandler;
            }

            class CXMLReaderAdapter {
                constructor();

                constructor(
                    [in] IXMLReader* xmlReader);

                interface IParser;
                interface IContentHandler;
            }

            class CXMLFilterImpl {
                constructor();

                constructor(
                    [in] IXMLReader* parent);

                interface IXMLReader;
                interface IXMLFilter;
                interface IEntityResolver;
                interface IDTDHandler;
                interface IContentHandler;
                interface IErrorHandler;
            }

            class CParserAdapter {
                constructor();

                constructor(
                    [in] IParser* parent);

                interface IXMLReader;
                interface IDocumentHandler;
            }
        }

        namespace Ext {
            class CLocator2Impl {
                constructor();

                constructor(
                    [in] ILocator* locator);

                interface ILocator;
                interface ILocator2;
                interface ILocator2Impl;
            }

            class CAttributes2Impl {
                constructor();

                constructor(
                    [in] IAttributes* atts);

                interface IAttributes;
                interface IAttributes2;
                interface IAttributes2Impl;
            }

            class CDefaultHandler2 {
                interface IDTDHandler;
                interface IContentHandler;
                interface IErrorHandler;
                interface ILexicalHandler;
                interface IDeclHandler;
                interface IEntityResolver;
                interface IEntityResolver2;
            }
        }

    } // namespace Sax
    } // namespace Xml
    } // namespace Org

}