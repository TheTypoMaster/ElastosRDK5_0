
module
{
    importlib("Elastos.CoreLibrary.eco");

    merge("../../../../car/org/xml/sax/Exceptions.car");
    merge("../../../../car/org/xml/sax/IAttributeList.car");
    merge("../../../../car/org/xml/sax/IAttributes.car");
    merge("../../../../car/org/xml/sax/IContentHandler.car");
    merge("../../../../car/org/xml/sax/IDocumentHandler.car");
    merge("../../../../car/org/xml/sax/IDTDHandler.car");
    merge("../../../../car/org/xml/sax/IEntityResolver.car");
    merge("../../../../car/org/xml/sax/IErrorHandler.car");
    merge("../../../../car/org/xml/sax/IInputSource.car");
    merge("../../../../car/org/xml/sax/ILocator.car");
    merge("../../../../car/org/xml/sax/IParser.car");
    merge("../../../../car/org/xml/sax/IXMLReader.car");
    merge("../../../../car/org/xml/sax/IXMLFilter.car");

    merge("../../../../car/org/xml/sax/helpers/IAttributeListImpl.car");
    merge("../../../../car/org/xml/sax/helpers/IAttributesImpl.car");
    merge("../../../../car/org/xml/sax/helpers/ILocatorImpl.car");
    merge("../../../../car/org/xml/sax/helpers/INamespaceSupport.car");
    merge("../../../../car/org/xml/sax/helpers/IParserFactory.car");
    merge("../../../../car/org/xml/sax/helpers/IXMLReaderFactory.car");

    merge("../../../../car/org/xml/sax/ext/IAttributes2.car");
    merge("../../../../car/org/xml/sax/ext/IAttributes2Impl.car");
    merge("../../../../car/org/xml/sax/ext/IDeclHandler.car");
    merge("../../../../car/org/xml/sax/ext/IEntityResolver2.car");
    merge("../../../../car/org/xml/sax/ext/ILexicalHandler.car");
    merge("../../../../car/org/xml/sax/ext/ILocator2.car");
    merge("../../../../car/org/xml/sax/ext/ILocator2Impl.car");

    using interface Elastos.IO.IInputStream;
    using interface Elastos.IO.IReader;

    interface Org.Xml.Sax.IAttributes;
    interface Org.Xml.Sax.IAttributeList;

    namespace Org {
    namespace Xml {
    namespace Sax {

    class CInputSource {
        constructor();

        constructor(
            [in] String str);

        constructor(
            [in] IInputStream* inputStream);

        constructor(
            [in] IReader* reader);

        interface IInputSource;
    }

    class CHandlerBase {
        interface IEntityResolver;
        interface IDTDHandler;
        interface IDocumentHandler;
        interface IErrorHandler;
    }

    namespace Helpers {

    //       class CAttributeListImpl {
    //           constructor();

    //           constructor(
    //               [in] IAttributeList* atts);

    //           interface IAttributeList;
    //           interface IAttributeListImpl;
    //       }

        class CAttributesImpl {
            constructor();

            constructor(
                [in] IAttributes* atts);

            interface IAttributes;
            interface IAttributesImpl;
        }

    //         class CLocatorImpl {
    //             constructor();

    //             constructor(
    //                 [in] ILocator* locator);

    //             interface ILocator;
    //             interface ILocatorImpl;
    //         }

    //         class CNamespaceSupport {
    //             constructor();

    //             interface INamespaceSupport;
    //         }

    //         singleton class CParserFactory {
    //             interface IParserFactory;
    //         }

    //         singleton class CXMLReaderFactory {
    //             interface IXMLReaderFactory;
    //         }

    //         class CDefaultHandler {
    //             interface IEntityResolver;
    //             interface IDTDHandler;
    //             interface IContentHandler;
    //             interface IErrorHandler;
    //         }

    //         class CXMLReaderAdapter {
    //             constructor();

    //             constructor(
    //                 [in] IXMLReader* xmlReader);

    //             interface IParser;
    //             interface IContentHandler;
    //         }

    //         class CXMLFilterImpl {
    //             constructor();

    //             constructor(
    //                 [in] IXMLReader* parent);

    //             interface IXMLReader;
    //             interface IXMLFilter;
    //             interface IEntityResolver;
    //             interface IDTDHandler;
    //             interface IContentHandler;
    //             interface IErrorHandler;
    //         }

    //         class CParserAdapter {
    //             constructor();

    //             constructor(
    //                 [in] IParser* parent);

    //             interface IXMLReader;
    //             interface IDocumentHandler;
    //         }
    }

    //     namespace Ext {
    //         class CLocator2Impl {
    //             constructor();

    //             constructor(
    //                 [in] ILocator* locator);

    //             interface ILocator;
    //             interface ILocator2;
    //             interface ILocator2Impl;
    //         }

    //         class CAttributes2Impl {
    //             constructor();

    //             constructor(
    //                 [in] IAttributes* atts);

    //             interface IAttributes;
    //             interface IAttributes2;
    //             interface IAttributes2Impl;
    //         }

    //         class CDefaultHandler2 {
    //             interface IDTDHandler;
    //             interface IContentHandler;
    //             interface IErrorHandler;
    //             interface ILexicalHandler;
    //             interface IDeclHandler;
    //             interface IEntityResolver;
    //             interface IEntityResolver2;
    //         }
    //     }

    } // namespace Sax
    } // namespace Xml
    } // namespace Org

}
