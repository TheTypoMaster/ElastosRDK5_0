
module
{
    merge("apache/harmony/security/asn1/Exceptions.car");
    merge("apache/harmony/security/asn1/IASN1Constants.car");
    merge("apache/harmony/security/asn1/IASN1OctetString.car");
    merge("apache/harmony/security/asn1/IASN1Type.car");
    merge("apache/harmony/security/asn1/IASN1StringType.car");
    merge("apache/harmony/security/asn1/IASN1Time.car");
    merge("apache/harmony/security/asn1/IASN1UTCTime.car");
    merge("apache/harmony/security/asn1/IASN1Choice.car");
    merge("apache/harmony/security/asn1/IASN1Explicit.car");
    merge("apache/harmony/security/asn1/IASN1TypeCollection.car");
    merge("apache/harmony/security/asn1/IASN1ValueCollection.car");
    merge("apache/harmony/security/asn1/IASN1Sequence.car");
    merge("apache/harmony/security/asn1/IASN1SequenceOf.car");
    merge("apache/harmony/security/asn1/IASN1Set.car");
    merge("apache/harmony/security/asn1/IASN1SetOf.car");
    merge("apache/harmony/security/asn1/IBitString.car");
    merge("apache/harmony/security/asn1/IBerInputStream.car");
    merge("apache/harmony/security/asn1/IBerOutputStream.car");
    merge("apache/harmony/security/asn1/IDerInputStream.car");
    merge("apache/harmony/security/asn1/IDerOutputStream.car");

    merge("apache/harmony/security/fortress/IEngine.car");
    merge("apache/harmony/security/fortress/ISecurityAccess.car");
    merge("apache/harmony/security/fortress/IServices.car");

    merge("apache/harmony/security/pkcs7/IContentInfo.car");
    merge("apache/harmony/security/pkcs7/ISignedData.car");
    merge("apache/harmony/security/pkcs7/ISignerInfo.car");

    merge("apache/harmony/security/utils/IObjectIdentifier.car");
    merge("apache/harmony/security/utils/IJarUtils.car");

    merge("apache/harmony/security/x501/IAttributeValue.car");
    merge("apache/harmony/security/x501/IAttributeTypeAndValue.car");
    merge("apache/harmony/security/x501/IName.car");

    merge("apache/harmony/security/x509/IAlgorithmIdentifier.car");
    merge("apache/harmony/security/x509/IBasicConstraints.car");
    merge("apache/harmony/security/x509/ICertificate.car");
    merge("apache/harmony/security/x509/IExtension.car");
    merge("apache/harmony/security/x509/IExtensions.car");
    merge("apache/harmony/security/x509/IExtensionValue.car");
    merge("apache/harmony/security/x509/IKeyUsage.car");

    merge("apache/harmony/security/x509/ISubjectPublicKeyInfo.car");

    merge("apache/harmony/security/x509/ITBSCertificate.car");
    merge("apache/harmony/security/x509/IValidity.car");


    interface Elastos.IO.IInputStream;

    namespace Org {
    namespace Apache {
    namespace Harmony {
    namespace Security {

    namespace Asn1 {

    class CASN1OctetString {
        constructor();

        interface IASN1OctetString;
        interface IASN1StringType;
        interface IASN1Type;
        interface IASN1Constants;
    }

    singleton class CASN1OctetStringHelper {
        interface IASN1OctetStringHelper;
    }

    [deprecated]
    class CBerInputStream {
        constructor(
            [in] ArrayOf<Byte>* encoded);

        constructor(
            [in] ArrayOf<Byte>* encoded,
            [in] Int32 offset,
            [in] Int32 expectedLength);

        constructor(
            [in] IInputStream* is);

        constructor(
            [in] IInputStream* is,
            [in] Int32 initialSize);

        interface IBerInputStream;
    }

    class CBerOutputStream {
        interface IBerOutputStream;
    }

    [deprecated]
    class CDerInputStream {
        constructor(
            [in] ArrayOf<Byte>* encoded);

        constructor(
            [in] ArrayOf<Byte>* encoded,
            [in] Int32 offset,
            [in] Int32 expectedLength);

        constructor(
            [in] IInputStream* is);

        interface IDerInputStream;
        interface IBerInputStream;
    }

    class CDerOutputStream {
        constructor(
            [in] IASN1Type* asn1,
            [in] IInterface* object);

        interface IDerOutputStream;
        interface IBerOutputStream;
    }

    }

    namespace Fortress {

    class CEngine {
        /**
         * Creates a Engine object
         *
         * @param serviceName
         */
        constructor(
            [in] String serviceName);

        interface IEngine;
    }

    singleton class CServices {
        interface IServices;
    }

    } // namespace Fortress

    namespace Pkcs7 {

    singleton class CContentInfoHelper {
        interface IContentInfoHelper;
    }

    } // namespace Pkcs7

    namespace Utils {

    singleton class CJarUtils {
        interface IJarUtils;
    }

    } // namespace Utils
    }
    }
    }
    }

}
