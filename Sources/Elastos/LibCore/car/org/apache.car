
module
{
    merge("apache/harmony/security/asn1/Exceptions.car");
    merge("apache/harmony/security/asn1/IASN1Constants.car");
    merge("apache/harmony/security/asn1/IASN1Type.car");
    merge("apache/harmony/security/asn1/IASN1StringType.car");
    merge("apache/harmony/security/asn1/IASN1Time.car");
    merge("apache/harmony/security/asn1/IASN1UTCTime.car");
    merge("apache/harmony/security/asn1/IASN1Choice.car");
    merge("apache/harmony/security/asn1/IASN1Explicit.car");
    merge("apache/harmony/security/asn1/IASN1TypeCollection.car");
    merge("apache/harmony/security/asn1/IASN1ValueCollection.car");
    merge("apache/harmony/security/asn1/IASN1Sequence.car");
    merge("apache/harmony/security/asn1/IASN1SequenceOf.car");
    merge("apache/harmony/security/asn1/IASN1Set.car");
    merge("apache/harmony/security/asn1/IASN1SetOf.car");
    merge("apache/harmony/security/asn1/IBerInputStream.car");
    merge("apache/harmony/security/asn1/IBerOutputStream.car");

    merge("apache/harmony/security/fortress/IEngine.car");
    merge("apache/harmony/security/fortress/ISecurityAccess.car");
    merge("apache/harmony/security/fortress/IServices.car");

    merge("apache/harmony/security/utils/IJarUtils.car");

    interface Elastos.IO.IInputStream;

    namespace Org {
    namespace Apache {
    namespace Harmony {
    namespace Security {

    namespace Asn1 {

    [deprecated]
    class CBerInputStream {
        constructor(
            [in] ArrayOf<Byte>* encoded);

        constructor(
            [in] ArrayOf<Byte>* encoded,
            [in] Int32 offset,
            [in] Int32 expectedLength);

        constructor(
            [in] IInputStream* is);

        constructor(
            [in] IInputStream* is,
            [in] Int32 initialSize);

        interface IBerInputStream;
    }

    }

    namespace Fortress {

    class CEngine {
        /**
         * Creates a Engine object
         *
         * @param serviceName
         */
        constructor(
            [in] String serviceName);

        interface IEngine;
    }

    singleton class CServices {
        interface IServices;
    }

    } // namespace Fortress

    namespace Utils {

    singleton class CJarUtils {
        interface IJarUtils;
    }

    } // namespace Utils
    }
    }
    }
    }
}
