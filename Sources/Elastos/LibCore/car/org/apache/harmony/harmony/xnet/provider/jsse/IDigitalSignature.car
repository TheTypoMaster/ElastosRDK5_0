

module
{
    namespace Org {
    namespace Apache {
    namespace Harmony {
    namespace Xnet {
    namespace Provider {
    namespace Jsse {

    /**
     * This class represents Signature type, as described in TLS v 1.0 Protocol
     * specification, 7.4.3. It allow to init, update and sign hash. Hash algorithm
     * depends on SignatureAlgorithm.
     *
     * select (SignatureAlgorithm)
     *       {   case anonymous: struct { };
     *           case rsa:
     *               digitally-signed struct {
     *                   opaque md5_hash[16];
     *                   opaque sha_hash[20];
     *               };
     *           case dsa:
     *               digitally-signed struct {
     *                   opaque sha_hash[20];
     *               };
     *       } Signature;
     *
     * Digital signing description see in TLS spec., 4.7.
     * (http://www.ietf.org/rfc/rfc2246.txt)
     *
     */
    interface IDigitalSignature {
        /**
         * Initiate Signature type by private key
         * @param key
         */
        Init(
            [in] IPrivateKey* key);

        /**
         * Initiate Signature type by certificate
         * @param cert
         */
        InitEx(
            [in] ICertificate* cert);

        /**
         * Update Signature hash
         * @param data
         */
        Update(
            [in] ArrayOf<Byte>* data);

        /**
         * Sets MD5 hash
         * @param data
         */
        SetMD5(
            [in] ArrayOf<Byte>* data);

        /**
         * Sets SHA hash
         * @param data
         */
        SetSHA(
            [in] ArrayOf<Byte>* data);

        /**
         * Sign hash
         * @return Signature bytes
         */
        Sign(
            [out, callee] ArrayOf<Byte>* sign);

        /**
         * Verifies the signature data.
         * @param data - the signature bytes
         * @return true if verified
         */
        VerifySignature(
            in] ArrayOf<Byte>* data,
            [out] Boolean* result);
    }

    } // namespace Jsse
    } // namespace Provider
    } // namespace Xnet
    } // namespace Harmony
    } // namespace Apache
    } // namespace Org
}