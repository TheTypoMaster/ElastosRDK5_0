
module
{
    namespace Org {
    namespace Apache {
    namespace Harmony {
    namespace Security {
    namespace Asn1 {

    interface IASN1Type extends IASN1Constants {
        /** Integer representation of primitive identifier. */
        GetId(
            [out] Int32* id);

        /** Integer representation of constructed identifier. */
        GetConstrId(
            [out] Int32* constrId);

        Decode(
            [in] ArrayOf<Byte>* encoded,
            [out] IInterface** object);

        DecodeEx(
            [in] ArrayOf<Byte>* encoded,
            [in] Int32 offset,
            [in] Int32 encodingLen,
            [out] IInterface** object);

        DecodeEx2(
            [in] IInputStream* in,
            [out] IInterface** object);

        Verify(
            [in] ArrayOf<Byte>* encoded);

        VerifyEx(
            [in] IInputStream* in);

        Encode(
            [in] IInterface* object,
            [out, callee] ArrayOf<Byte>* encode);

        Decode(
            [in] IBerInputStream* in,
            [out] IInterface** object);

        /**
         * Tests provided identifier.
         *
         * @param identifier identifier to be verified
         * @return true if identifier is associated with this ASN.1 type
        */
        CheckTag(
            [in] Int32 identifier,
            [out] Boolean* checkTag);

        /**
         * Creates decoded object.
         *
         * Derived classes should override this method to provide creation for a
         * selected class of objects during decoding.
         *
         * The default implementation returns an object created by decoding stream.
        */
        GetDecodedObject(
            [in] IBerInputStream* in,
            [out] IInterface** object);

        EncodeASN(
            [in] IBerOutputStream* out);

        EncodeContent(
            [in] IBerOutputStream* out);

        SetEncodingContent(
            [in] IBerOutputStream* out);

        GetEncodedLength(
            [in] IBerOutputStream* out,
            [out] Int32* length);

        ToString(
            [out] String* result);
    }

    } // namespace Asn1
    } // namespace Security
    } // namespace Harmony
    } // namespace Apache
    } // namespace Org
}
