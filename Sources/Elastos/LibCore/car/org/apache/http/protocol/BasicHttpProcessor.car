
module
{

    using interface Elastos.Utility.IList;

    namespace Org {
    namespace Apache {
    namespace Http {
    namespace Protocol {

    /**
     * Keeps lists of interceptors for processing requests and responses.
     *
     * @author <a href="mailto:oleg at ural.ru">Oleg Kalnichevski</a>
     * @author Andrea Selva
     *
     * @version $Revision: 613298 $
     *
     * @since 4.0
     */
    /**
     * @Involve
     * interface IHttpProcessor;
     * interface IHttpRequestInterceptor;
     * interface IHttpResponseInterceptor;
     * interface IHttpRequestInterceptorList;
     * interface IHttpResponseInterceptorList;
     */
    interface IBasicHttpProcessor {

        /**
         * Same as {@link #addRequestInterceptor(HttpRequestInterceptor) addRequestInterceptor}.
         *
         * @param interceptor       the interceptor to add
         */
        AddInterceptor(
            [in] IHttpRequestInterceptor* interceptor);

        AddInterceptor(
            [in] IHttpRequestInterceptor* interceptor,
            [in] Int32 index);

        /**
         * Same as {@link #addResponseInterceptor(HttpResponseInterceptor) addResponseInterceptor}.
         *
         * @param interceptor       the interceptor to add
         */
        AddInterceptor(
            [in] IHttpResponseInterceptor* interceptor);

        AddInterceptor(
            [in] IHttpResponseInterceptor* interceptor,
            [in] Int32 index);

        /**
         * Clears both interceptor lists maintained by this processor.
         */
        ClearInterceptors();

        /**
         * Creates a copy of this instance
         *
         * @return new instance of the BasicHttpProcessor
         */
        Copy(
            [out] IBasicHttpProcessor** processor);

    }

    } // namespace Protocol
    } // namespace Http
    } // namespace Apache
    } // namespace Org

}
