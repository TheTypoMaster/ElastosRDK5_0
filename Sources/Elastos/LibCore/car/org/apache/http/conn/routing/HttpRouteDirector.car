
module
{

    interface Org.Apache.Http.Conn.Routing.IRouteInfo;

    namespace Org {
    namespace Apache {
    namespace Http {
    namespace Conn {
    namespace Routing {

    /**
     * Provides directions on establishing a route.
     * Implementations of this interface compare a planned route with
     * a tracked route and indicate the next step required.
     *
     * @author <a href="mailto:rolandw at apache.org">Roland Weber</a>
     *
     *
     * <!-- empty lines to avoid svn diff problems -->
     * @version $Revision: 620255 $
     *
     * @since 4.0
     */
    interface IHttpRouteDirector {

        /** Indicates that the route can not be established at all. */
        const Int32 UNREACHABLE = -1;

        /** Indicates that the route is complete. */
        const Int32 COMPLETE = 0;

        /** Step: open connection to target. */
        const Int32 CONNECT_TARGET = 1;

        /** Step: open connection to proxy. */
        const Int32 CONNECT_PROXY = 2;

        /** Step: tunnel through proxy to target. */
        const Int32 TUNNEL_TARGET = 3;

        /** Step: tunnel through proxy to other proxy. */
        const Int32 TUNNEL_PROXY = 4;

        /** Step: layer protocol (over tunnel). */
        const Int32 LAYER_PROTOCOL = 5;


        /**
         * Provides the next step.
         *
         * @param plan      the planned route
         * @param fact      the currently established route, or
         *                  <code>null</code> if nothing is established
         *
         * @return  one of the constants defined in this interface, indicating
         *          either the next step to perform, or success, or failure.
         *          0 is for success, a negative value for failure.
         */
        NextStep(
            [in] IRouteInfo* plan,
            [in] IRouteInfo* fact,
            [out] Int32* step);

    }

    } // namespace Routing
    } // namespace Conn
    } // namespace Http
    } // namespace Apache
    } // namespace Org

}
