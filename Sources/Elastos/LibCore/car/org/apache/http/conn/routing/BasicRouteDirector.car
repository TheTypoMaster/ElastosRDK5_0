
module
{

    interface Org.Apache.Http.Conn.Routing.IRouteInfo;

    namespace Org {
    namespace Apache {
    namespace Http {
    namespace Conn {
    namespace Routing {

    /**
     * Basic implementation of an {@link HttpRouteDirector HttpRouteDirector}.
     * This implementation is stateless and therefore thread-safe.
     *
     * @author <a href="mailto:rolandw at apache.org">Roland Weber</a>
     *
     *
     * <!-- empty lines to avoid svn diff problems -->
     * @version $Revision: 620255 $
     *
     * @since 4.0
     */
    interface IBasicRouteDirector {

        /**
         * Determines the first step to establish a route.
         *
         * @param plan      the planned route
         *
         * @return  the first step
         */
        FirstStep(
            [in] IRouteInfo* plan,
            [out] Int32* step);

        /**
         * Determines the next step to establish a direct connection.
         *
         * @param plan      the planned route
         * @param fact      the currently established route
         *
         * @return  one of the constants defined in this class, indicating
         *          either the next step to perform, or success, or failure
         */
        DirectStep(
            [in] IRouteInfo* plan,
            [in] IRouteInfo* fact,
            [out] Int32* step);

        /**
         * Determines the next step to establish a connection via proxy.
         *
         * @param plan      the planned route
         * @param fact      the currently established route
         *
         * @return  one of the constants defined in this class, indicating
         *          either the next step to perform, or success, or failure
         */
        ProxiedStep(
            [in] IRouteInfo* plan,
            [in] IRouteInfo* fact,
            [out] Int32* step);

    }

    } // namespace Routing
    } // namespace Conn
    } // namespace Http
    } // namespace Apache
    } // namespace Org

}
