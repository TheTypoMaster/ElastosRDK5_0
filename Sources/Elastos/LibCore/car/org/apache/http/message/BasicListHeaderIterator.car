
module
{

    namespace Org {
    namespace Apache {
    namespace Http {
    namespace Message {

    /**
     * Interface for formatting elements of the HEAD section of an HTTP message.
     * This is the complement to {@link LineParser}.
     * There are individual methods for formatting a request line, a
     * status line, or a header line. The formatting does <i>not</i> include the
     * trailing line break sequence CR-LF.
     * The formatted lines are returned in memory, the formatter does not depend
     * on any specific IO mechanism.
     * Instances of this interface are expected to be stateless and thread-safe.
     *
     * @author <a href="mailto:remm@apache.org">Remy Maucherat</a>
     * @author <a href="mailto:mbowler@GargoyleSoftware.com">Mike Bowler</a>
     * @author <a href="mailto:jsdever@apache.org">Jeff Dever</a>
     * @author <a href="mailto:oleg at ural.ru">Oleg Kalnichevski</a>
     * @author and others
     *
     *
     * <!-- empty lines above to avoid 'svn diff' context problems -->
     * @version $Revision: 574185 $
     *
     * @since 4.0
     */
    /**
     * @Involve
     * interface IHeaderIterator;
     * interface IIterator;
     */
    interface IBasicListHeaderIterator {

        /**
         * Determines the index of the next header.
         *
         * @param from      one less than the index to consider first,
         *                  -1 to search for the first header
         *
         * @return  the index of the next header that matches the filter name,
         *          or negative if there are no more headers
         */
        FindNext(
            [in] Int32 from,
            [out] Int32* index);

        /**
         * Checks whether a header is part of the iteration.
         *
         * @param index     the index of the header to check
         *
         * @return  <code>true</code> if the header should be part of the
         *          iteration, <code>false</code> to skip
         */
        FilterHeader(
            [in] Int32 index,
            [out] Boolean* result);

    }

    } // namespace Message
    } // namespace Http
    } // namespace Apache
    } // namespace Org

}
