
module
{
    interface Org.Xml.Sax.IContentHandler;
    interface Org.Xml.Sax.Ext.ILexicalHandler;

    namespace Elastosx {
    namespace Xml {
    namespace Transform {
    namespace Sax {

    /**
     * @Involve
     * interface IResult;
     */
    interface ISAXResult {

    /**
     * Set the target to be a SAX2 {@link org.xml.sax.ContentHandler}.
     *
     * @param handler Must be a non-null ContentHandler reference.
     */
        SetHandler(
            [in] IContentHandler* handler);

    /**
     * Get the {@link org.xml.sax.ContentHandler} that is the Result.
     *
     * @return The ContentHandler that is to be transformation output.
     */
        GetHandler(
            [out] IContentHandler** handler);

    /**
     * Set the SAX2 {@link org.xml.sax.ext.LexicalHandler} for the output.
     *
     * <p>This is needed to handle XML comments and the like.  If the
     * lexical handler is not set, an attempt should be made by the
     * transformer to cast the {@link org.xml.sax.ContentHandler} to a
     * <code>LexicalHandler</code>.</p>
     *
     * @param handler A non-null <code>LexicalHandler</code> for
     * handling lexical parse events.
     */
        SetLexicalHandler(
            [in] ILexicalHandler* handler);

    /**
     * Get a SAX2 {@link org.xml.sax.ext.LexicalHandler} for the output.
     *
     * @return A <code>LexicalHandler</code>, or null.
     */
        GetLexicalHandler(
            [out] ILexicalHandler** handler);

    /**
     * Method setSystemId Set the systemID that may be used in association
     * with the {@link org.xml.sax.ContentHandler}.
     *
     * @param systemId The system identifier as a URI string.
     */
        SetSystemId(
            [in] String systemId);

    /**
     * Get the system identifier that was set with setSystemId.
     *
     * @return The system identifier that was set with setSystemId, or null
     * if setSystemId was not called.
     */
        GetSystemId(
            [out] String* systemId);
    }

    } // namespace Sax
    } // namespace Transform
    } // namespace Xml
    } // namespace Elastosx
}
