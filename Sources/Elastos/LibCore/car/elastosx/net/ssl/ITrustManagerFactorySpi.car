
module
{
    interface Elastos.Security.IKeyStore;
    interface Elastosx.Net.Ssl.IManagerFactoryParameters;
    interface Elastosx.Net.Ssl.ITrustManager;
    /**
     * The <i>Service Provider Interface</i> (SPI) for the
     * {@code TrustManagerFactory} class.
     */

    namespace Elastosx {
    namespace Net {
    namespace Ssl {

    interface ITrustManagerFactorySpi {
        /**
         * Initializes this factory instance with the specified keystore as source
         * of certificate authorities and trust material.
         *
         * @param ks
         *            the keystore or {@code null}.
         * @throws KeyStoreException
         *             if the initialization fails.
         */
        EngineInit(
            [in] IKeyStore* ks);

        /**
         * Initializes this factory instance with the specified provider-specific
         * parameters for a source of trust material.
         *
         * @param spec
         *            the provider-specific parameters.
         * @throws InvalidAlgorithmParameterException
         *             if the initialization fails.
         */
        EngineInit(
            [in] IManagerFactoryParameters* spec);

        /**
         * Returns the list of {@code TrustManager}s with one entry for each type
         * of trust material.
         *
         * @return the list of {@code TrustManager}s
         */
        EngineGetTrustManagers(
            [out, callee] ArrayOf<ITrustManager*>* managers);
    }

    } // namespace Ssl
    } // namespace Net
    } // namespace Elastosx
}