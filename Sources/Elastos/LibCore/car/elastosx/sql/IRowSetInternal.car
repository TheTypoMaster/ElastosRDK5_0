module{

    interface Elastos.Sql.IConnection;
    interface Elastos.Sql.IResultSet;

    namespace Elastosx{
    namespace Sql{

    /**
     * An interface provided by a {@code RowSet} object to let either a {@code
     * RowSetReader} or a {@code RowSetWriter} access its internal state, thereby
     * providing facilities to read and update the state of the {@code RowSet}.
     */

    [deprecated]
    interface IRowSetInternal {
        /**
         * Gets the connection associated with this {@code RowSet} object.
         *
         * @return the connection or {@code null}.
         * @throws SQLException
         *             if there is a problem accessing the database.
         */
        GetConnection(
            [out] IConnection** conn);

        /**
         * Gets the {@code ResultSet} that was the original (unmodified) content of
         * the {@code RowSet}.
         * <p>
         * The {@code ResultSet}'s cursor is positioned before the first row of
         * data.
         *
         * @return the {@code ResultSet} that contained the original data value of
         *         the {@code RowSet}.
         * @throws SQLException
         *             if there is a problem accessing the database.
         */
        GetOriginal(
            [out] IResultSet** original);

        /**
         * Gets the original value of the current row only. If the current row did
         * not have an original value, then an empty value is returned.
         *
         * @return a {@code ResultSet} containing the value of the current row only.
         * @throws SQLException
         *             if there is a problem accessing the database, or if the
         *             cursor is not on a valid row (before the first row, after the
         *             last one or pointing to the insert row).
         */
        GetOriginalRow(
            [out] IResultSet** originalRow);

        /**
         * Gets the parameter values that have been set for this {@code RowSet}'s
         * command.
         *
         * @return the values of parameters that have been set.
         * @throws SQLException
         *             if there is a problem accessing the database.
         */
        GetParams(
            [out, callee] ArrayOf<IInterface*>* params);

        /**
         * Sets {@code RowSetMetaData} for this {@code RowSet}. The {@code
         * RowSetMetaData} is used by a {@code RowSetReader} to set values giving
         * information about the {@code RowSet}'s columns.
         *
         * @param theMetaData
         *            holds the metadata about the {@code RowSet}'s columns.
         * @throws SQLException
         *             if there is a problem accessing the database.
         */
        SetMetaData(
            [in] IRowSetMetaData* theMetaData);
    }

    } // namespace Sql
    } // namespace Elastosx
}