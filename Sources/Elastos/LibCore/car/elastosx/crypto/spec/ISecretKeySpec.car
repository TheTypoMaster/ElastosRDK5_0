
module
{
    namespace Elastosx {
    namespace Crypto {
    namespace Spec {

    /**
     * A key specification for a <code>SecretKey</code> and also a secret key
     * implementation that is provider-independent. It can be used for raw secret
     * keys that can be specified as <code>byte[]</code>.
     */
    /**
     * @Involve
     * interface Elastos.Security.Spec.IKeySpec;
     * interface Elastosx.Crypto.ISecretKey;
     */
    interface ISecretKeySpec {
        /**
         * Returns the algorithm name.
         *
         * @return the algorithm name.
         */
        GetAlgorithm(
            [out] String * value);

        /**
         * Returns the name of the format used to encode the key.
         *
         * @return the format name "RAW".
         */
        GetFormat(
            [out] String * value);

        /**
         * Returns the encoded form of this secret key.
         *
         * @return the encoded form of this secret key.
         */
        GetEncoded(
            [out, callee] ArrayOf<Byte> * value);
    }


    } // namespace Spec
    } // namespace Crypto
    } // namespace Elastosx
}