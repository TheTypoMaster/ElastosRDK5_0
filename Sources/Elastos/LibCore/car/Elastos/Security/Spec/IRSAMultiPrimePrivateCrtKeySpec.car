
module
{
    interface Elastos.Math.IBigInteger;
    interface Elastos.Security.Spec.IRSAOtherPrimeInfo;

    namespace Elastos {
    namespace Security {
    namespace Spec {

    /**
     * The key specification of a RSA multi-prime private key with the Chinese
     * Remainder Theorem (CRT) information values used.
     * <p>
     * Defined in the <a
     * href="http://www.rsa.com/rsalabs/pubs/PKCS/html/pkcs-1.html">PKCS #1 v2.1</a>
     * standard.
     */
    interface IRSAMultiPrimePrivateCrtKeySpec extends IRSAPrivateKeySpec {
        /**
         * Returns the CRT coefficient, {@code q^-1 mod p}.
         *
         * @return the CRT coefficient, {@code q^-1 mod p}.
         */
        GetCrtCoefficient(
            [out] IBigInteger** crtCoefficient);

        /**
         * Returns the information for the additional primes.
         *
         * @return the information for the additional primes, or {@code null} if
         *         there are only the two primes ({@code p, q}).
         */
        GetOtherPrimeInfo(
            [out, callee] ArrayOf<IRSAOtherPrimeInfo*>* primeInfo);

        /**
         * Returns the exponent of the prime {@code p}.
         *
         * @return the exponent of the prime {@code p}.
         */
        GetPrimeExponentP(
            [out] IBigInteger** p);

        /**
         * Returns the exponent of the prime {@code q}.
         *
         * @return the exponent of the prime {@code q}.
         */
        GetPrimeExponentQ(
            [out] IBigInteger** q);

        /**
         * Returns the prime factor {@code p}.
         *
         * @return the prime factor {@code p}.
         */
        GetPrimeP(
            [out] IBigInteger** p);

        /**
         * Returns the prime factor {@code q}.
         *
         * @return the prime factor {@code q}.
         */
        GetPrimeQ(
            [out] IBigInteger** q);

        /**
         * Returns the public exponent {@code e}.
         *
         * @return the public exponent {@code e}.
         */
        GetPublicExponent(
            [out] IBigInteger** pubExponent);
    }

    } // namespace Spec
    } // namespace Security
    } // namespace Elastos
}
