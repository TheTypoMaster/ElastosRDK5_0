module
{
    namespace Elastos {
    namespace Utility {
    /**
     * {@code Stack} is a Last-In/First-Out(LIFO) data structure which represents a
     * stack of objects. It enables users to pop to and push from the stack,
     * including null objects. There is no limit to the size of the stack.
     */
    interface IStack extends IVector {
        /**
         * Returns whether the stack is empty or not.
         *
         * @return {@code true} if the stack is empty, {@code false} otherwise.
         */
        Empty(
            [out] Boolean* value);

        /**
         * Returns the element at the top of the stack without removing it.
         *
         * @return the element at the top of the stack.
         * @throws EmptyStackException
         *             if the stack is empty.
         * @see #pop
         */
        // @SuppressWarnings("unchecked")
        Peek(
            [out] IInterface** outface);

        /**
         * Returns the element at the top of the stack and removes it.
         *
         * @return the element at the top of the stack.
         * @throws EmptyStackException
         *             if the stack is empty.
         * @see #peek
         * @see #push
         */
        // @SuppressWarnings("unchecked")
        Pop(
            [out] IInterface** outface);

        /**
         * Pushes the specified object onto the top of the stack.
         *
         * @param object
         *            The object to be added on top of the stack.
         * @return the object argument.
         * @see #peek
         * @see #pop
         */
        Push(
            [in] IInterface* object);

        /**
         * Returns the index of the first occurrence of the object, starting from
         * the top of the stack.
         *
         * @return the index of the first occurrence of the object, assuming that
         *         the topmost object on the stack has a distance of one.
         * @param o
         *            the object to be searched.
         */
        Search(
            [in] IInterface* o,
            [out] Int32* value);
    }

    } // namespace Utility
    } // namespace Elastos
}