module
{
    namespace Elastos {
    namespace Utility {
    namespace Logging {
    /**
     * A handler that writes log messages to a socket connection.
     * <p>
     * This handler reads the following properties from the log manager to
     * initialize itself:
     * <ul>
     * <li>java.util.logging.ConsoleHandler.level specifies the logging level,
     * defaults to {@code Level.ALL} if this property is not found or has an invalid
     * value.
     * <li>java.util.logging.SocketHandler.filter specifies the name of the filter
     * class to be associated with this handler, defaults to {@code null} if this
     * property is not found or has an invalid value.
     * <li>java.util.logging.SocketHandler.formatter specifies the name of the
     * formatter class to be associated with this handler, defaults to
     * {@code java.util.logging.XMLFormatter} if this property is not found or has
     * an invalid value.
     * <li>java.util.logging.SocketHandler.encoding specifies the encoding this
     * handler will use to encode log messages, defaults to {@code null} if this
     * property is not found or has an invalid value.
     * <li>java.util.logging.SocketHandler.host specifies the name of the host that
     * this handler should connect to. There's no default value for this property.
     * <li>java.util.logging.SocketHandler.encoding specifies the port number that
     * this handler should connect to. There's no default value for this property.
     * </ul>
     * <p>
     * This handler buffers the outgoing messages, but flushes each time a log
     * record has been published.
     * <p>
     * This class is not thread-safe.
     */

    /**
     * @Involve
     * interface ILogHandler;
     * interface IStreamHandler;
     */
    interface ISocketHandler {
    }

    } // namespace Logging
    } // namespace Utility
    } // namespace Elastos
}
