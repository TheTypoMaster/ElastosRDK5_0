
module
{
    namespace Elastos {
    namespace Net {

    /**
     * This class allows raw L2 packets to be sent and received via the
     * specified network interface.  The receive-side implementation is
     * restricted to UDP packets for efficiency.
     *
     * @hide
     */
    [deprecated]
    interface IRawSocket extends Elastos.IO.ICloseable {

        /**
         * Ethernet IP protocol type, part of the L2 header of IP packets.
         */
        const Int16 ETH_P_IP = 0x0800;

        /**
         * Ethernet ARP protocol type, part of the L2 header of ARP packets.
         */
        const Int16 ETH_P_ARP = 0x0806;

        /**
         * Reads a raw packet into the specified buffer, with the
         * specified timeout.  If the destPort is -1, then the IP
         * destination port is not verified, otherwise only packets
         * destined for the specified UDP port are returned.  Returns the
         * length actually read.  No indication of overflow is signaled.
         * The packet data will start at the IP header (EthernetII
         * dest/source/type headers are removed).
         */
        Read(
            [in] ArrayOf<Byte>* packet,
            [in] Int32 offset,
            [in] Int32 byteCount,
            [in] Int32 destPort,
            [in] Int32 timeoutMillis,
            [out] Int32* number);

        /**
         * Writes a raw packet to the desired interface.  A L2 header will
         * be added which includes the specified destination address, our
         * source MAC, and the specified protocol type.  The caller is responsible
         * for computing correct IP-header and payload checksums.
         */
        Write(
            [in] ArrayOf<Byte>* destMac,
            [in] ArrayOf<Byte>* packet,
            [in] Int32 offset,
            [in] Int32 byteCount,
            [out] Int32* number);
    }

    } // namespace Net
    } // namespace Elastos
}
