
module
{
    interface Elastos.Net.INetworkInterface;
    interface Elastos.Net.IInetAddress;

    namespace Elastos {
    namespace Net {

     /**
     * An IPv6 address. See InetAddress.
     * @implements Elastos.Net.IInetAddress
     */
    interface IInet6Address extends IInetAddress {
        /**
         * Returns the scope id if this address is scoped to an interface, 0 otherwise.
         */
        GetScopeId(
            [out] Int32* scopeId);

        /**
         * Returns the network interface if this address is instanced with a scoped
         * network interface, null otherwise.
         */
        GetScopedInterface(
            [out] INetworkInterface** scopedInterface);

        /**
         * Returns whether this IPv6 address is an IPv4-compatible address or not.
         * An IPv4-compatible address has the prefix {::/96} and is a deprecated
         * and no-longer used equivalent of the modern IPv4-mapped IPv6 addresses.
         */
        IsIPv4CompatibleAddress(
            [out] Boolean* IPv4Compatible);
    }

    [deprecated]
    interface IInet6AddressHelper {
        /**
         * Constructs an IPv6 address according to the given {host},
         * {addr} and {scope_id}.
         *
         * @param host
         *            the host name associated with the address.
         * @param addr
         *            the network address.
         * @param scope_id
         *            the scope id for link- or site-local addresses.
         * @return the Inet6Address instance representing the IP address.
         * @return ECode = NOERROR(0) if success, else as follows:
         * Value | Meaning |
         * :-|:------------|
         * UnknownHostException | if the address is null or has an invalid length.
         */
        GetByAddress(
            [in] String host,
            [in] ArrayOf<Byte>* addr,
            [in] Int32 scope_id,
            [out] IInet6Address** address);

        /**
         * Gets an IPv6 address instance according to the given {host},
         * {addr} and {nif}. {scope_id} is set according to the
         * given {nif} and the {addr} type (for example site-local or
         * link-local).
         *
         * @param host
         *            the hostname associated with the address.
         * @param addr
         *            the network address.
         * @param nif
         *            the network interface that this address is associated with.
         * @return the Inet6Address instance representing the IP address.
         * @return ECode = NOERROR(0) if success, else as follows:
         * Value | Meaning |
         * :-|:------------|
         * UnknownHostException | if the address is {null} or has an invalid length or the interface doesn't have a numeric scope id for the given address type.
         */
        GetByAddressEx(
            [in] String host,
            [in] ArrayOf<Byte>* addr,
            [in] INetworkInterface* nif,
            [out] IInet6Address** address);

        GetANY(
            [out] IInetAddress** result);

        GetLOOPBACK(
            [out] IInetAddress** result);
    }

    } // namespace Net
    } // namespace Elastos
}
