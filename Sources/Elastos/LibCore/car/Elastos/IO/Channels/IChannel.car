
module
{
    namespace Elastos {
    namespace IO {
    namespace Channels {

    /*
     * A channel is a conduit to I/O services covering such itemes as files, sockets,
     * hw devices, IO ports or some software component.
     *
     * Channels are open upon creation, and can be closed explicitly. Once a channel
     * is closed it cannot be re-opened, and any attempts to perform IO operations
     * on the closed channel result in a ClosedChannelException error.
     *
     * Particular implementations or sub-interfaces of Channel dicate whether they are
     * thread safe or not.
     */
    interface IChannel {
        /**
         * Returns true if this channel is open.
         */
        IsOpen(
            [out] Boolean* rst);

        /**
         * Closes an open channel. If the channel is already closed then this method
         * has no effect. If there is a problem with closing the channel then the
         * method throws an IOException and the exception contains reasons for the
         * failure.
         * <p>
         * If an attempt is made to perform an operation on a closed channel then a
         * {@link ClosedChannelException} will be thrown on that attempt.
         * <p>
         * If multiple threads attempt to simultaneously close a channel, then only
         * one thread will run the closure code, and others will be blocked until
         * the first returns.
         *
         * @throws IOException
         *             if a problem occurs closing the channel.
         */
        Close();
    }

    } // namespace Channels
    } // namespace IO
    } // namespace Elastos
}
