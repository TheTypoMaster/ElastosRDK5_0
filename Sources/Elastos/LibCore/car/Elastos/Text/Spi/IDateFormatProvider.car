module
{
    using interface Elastos.Text.IDateFormat;
    using interface Libcore.ICU.ILocale;
    using interface Elastos.Utility.Spi.ILocaleServiceProvider;

    namespace Elastos {
    namespace Text {
    namespace Spi {

    interface IDateFormatProvider { //extends ILocaleServiceProvide
        /**
         * Returns an instance of {@code DateFormat} that formats times
         * in the given style for the given locale.
         *
         * @param style the given time formatting style.
         * @param locale the locale
         * @return an instance of {@code DateFormat}
         * @throws NullPointerException if {@code locale == null}
         * @throws IllegalArgumentException
         *             if locale isn't one of the locales returned from
         *             getAvailableLocales().
         */
        GetTimeInstance(
            [in] Int32 style,
            [in] ILocale * locale ,
            [out] IDateFormat ** outformat);

        /**
         * Returns an instance of {@code DateFormat} that formats dates
         * in the given style for the given locale.
         *
         * @param style the given date formatting style.
         * @param locale the locale
         * @return an instance of {@code DateFormat}
         * @throws NullPointerException if {@code locale == null}
         * @throws IllegalArgumentException
         *             if locale isn't one of the locales returned from
         *             getAvailableLocales().
         */
        GetDateInstance(
            [in] Int32 style,
            [in] ILocale * locale,
            [out] IDateFormat ** outformat);

        /**
         * Returns an instance of {@code DateFormat} that formats dates and times
         * in the given style for the given locale.
         *
         * @param dateStyle the given date formatting style.
         * @param timeStyle the given time formatting style.
         * @param locale the locale
         * @return an instance of {@code DateFormat}
         * @throws NullPointerException if {@code locale == null}
         * @throws IllegalArgumentException
         *             if locale isn't one of the locales returned from
         *             getAvailableLocales().
         */
        GetDateTimeInstance(
            [in] Int32 dateStyle,
            [in] Int32 timeStyle,
            [in] ILocale * locale,
            [out] IDateFormat ** outformat);
    }

    } // namespace Spi
    } // namespace Text
    } // namespace Elastos
}