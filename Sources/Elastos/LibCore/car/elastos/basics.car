module
{
    //======================================================
    // Elastos.Core
    //======================================================
    merge("core/Errors.car");
    merge("core/Exceptions.car");
    merge("core/ICharSequence.car");
    merge("core/IAppendable.car");
    merge("core/ICloneable.car");
    merge("core/IComparable.car");
    merge("core/IComparator.car");
    merge("core/IStringBuilder.car");
    merge("core/IStringBuffer.car");
    merge("core/IArrayOf.car");
    merge("core/INumber.car");
    merge("core/IBoolean.car");
    merge("core/IByte.car");
    merge("core/IChar32.car");
    merge("core/IChar16.car");
    merge("core/IChar8.car");
    merge("core/IInteger16.car");
    merge("core/IInteger32.car");
    merge("core/IInteger64.car");
    merge("core/IFloat.car");
    merge("core/IDouble.car");
    merge("core/IString.car");
    merge("core/IRunnable.car");
    merge("core/ISynchronize.car");
    merge("core/IThread.car");
    merge("core/IThreadGroup.car");
    merge("core/IClassLoader.car");
    merge("core/IRandom.car");
    merge("core/IThrowable.car");
    merge("core/IStackTraceElement.car");
    merge("core/IBlockGuard.car");
    merge("core/ICloseGuard.car");
    merge("core/IEnum.car");
    merge("core/ISystem.car");

    //======================================================
    // Elastos.Math
    //======================================================
    merge("math/IMathContext.car");
    merge("math/IBigDecimal.car");
    merge("math/IBigInteger.car");
    merge("math/RoundingMode.car");

    //======================================================
    // Libcore.IO
    //======================================================
    merge("../libcore/io/Exceptions.car");
    merge("../libcore/io/IOsConstants.car");
    merge("../libcore/io/IOs.car");
    merge("../libcore/io/IIoBridge.car");
    merge("../libcore/io/ILibcore.car");
    merge("../libcore/io/IStructAddrinfo.car");
    merge("../libcore/io/IStructFlock.car");
    merge("../libcore/io/IStructGroupReq.car");
    merge("../libcore/io/IStructLinger.car");
    merge("../libcore/io/IStructPasswd.car");
    merge("../libcore/io/IStructPollfd.car");
    merge("../libcore/io/IStructStat.car");
    merge("../libcore/io/IStructStatFs.car");
    merge("../libcore/io/IStructTimeval.car");
    merge("../libcore/io/IStructUtsname.car");
    merge("../libcore/io/ISocketTagger.car");
    merge("../libcore/io/IBase64.car");

    //======================================================
    // Elastos.Text
    //======================================================
    merge("text/ICharacterIterator.car");
    merge("text/ICollationKey.car");
    merge("text/IStringCharacterIterator.car");
    merge("text/IDecimalFormatSymbols.car");
    merge("text/IFieldPosition.car");
    merge("text/IParsePosition.car");
    merge("text/IAttributedCharacterIterator.car");
    merge("text/IAttributedString.car");

    //======================================================
    // Libcore.ICU
    //======================================================
    merge("../libcore/icu/Exceptions.car");
    merge("../libcore/icu/ICollationKeyICU.car");
    merge("../libcore/icu/ILocaleData.car");
    merge("../libcore/icu/IICUHelper.car");
    merge("../libcore/icu/IRuleBasedCollatorICU.car");
    merge("../libcore/icu/ITimeZoneNames.car");
    merge("../libcore/icu/ICollationElementIteratorICU.car");
    merge("../libcore/icu/INativeDecimalFormat.car");
    merge("../libcore/icu/INativeBreakIterator.car");
    merge("../libcore/icu/INativeCollationHelper.car");
    merge("../libcore/icu/INativeIDNHelper.car");
    merge("../libcore/icu/INativePluralRules.car");
    merge("../libcore/icu/INativeNormalizerHelper.car");
    merge("../libcore/icu/IAlphabeticIndex.car");

    //======================================================
    // Libcore.Utility
    //======================================================
    merge("../libcore/utility/IBasicLruCache.car");
    merge("../libcore/utility/ICollectionUtils.car");

    //======================================================
    // Elastos.IO
    //======================================================
    merge("io/ICloseable.car");
    merge("io/IFlushable.car");
    merge("io/IInputStream.car");
    merge("io/IFilterInputStream.car");
    merge("io/IBufferedInputStream.car");
    merge("io/IOutputStream.car");
    merge("io/IFilterOutputStream.car");
    merge("io/IBufferedOutputStream.car");
    merge("io/IReadable.car");
    merge("io/IReader.car");
    merge("io/IBufferedReader.car");
    merge("io/IWriter.car");
    merge("io/IBufferedWriter.car");
    merge("io/IByteArrayInputStream.car");
    merge("io/IByteArrayOutputStream.car");
    merge("io/IBufferIterator.car");
    merge("io/ICharArrayReader.car");
    merge("io/ICharArrayWriter.car");
    merge("io/IDataInput.car");
    merge("io/IDataInputStream.car");
    merge("io/IDataOutput.car");
    merge("io/IDataOutputStream.car");
    merge("io/IFile.car");
    merge("io/IFileDescriptor.car");
    merge("io/IFileFilter.car");
    merge("io/IFileInputStream.car");
    merge("io/IFileOutputStream.car");
    merge("io/IFilePermission.car");
    merge("io/IInputStreamReader.car");
    merge("io/IFileReader.car");
    merge("io/IOutputStreamWriter.car");
    merge("io/IFileWriter.car");
    merge("io/IFilenameFilter.car");
    merge("io/IFilterReader.car");
    merge("io/IFilterWriter.car");
    merge("io/ILineNumberInputStream.car");
    merge("io/ILineNumberReader.car");
    merge("io/IObjectInput.car");
    merge("io/IObjectInputStream.car");
    merge("io/IObjectInputValidation.car");
    merge("io/IObjectOutput.car");
    merge("io/IObjectOutputStream.car");
    merge("io/ISerializable.car");
    merge("io/IObjectStreamClass.car");
    merge("io/IObjectStreamField.car");
    merge("io/IPrintStream.car");
    merge("io/IPrintWriter.car");
    merge("io/IPushbackInputStream.car");
    merge("io/IPushbackReader.car");
    merge("io/IRandomAccessFile.car");
    merge("io/ISequenceInputStream.car");
    merge("io/IStreamTokenizer.car");
    merge("io/IStringBufferInputStream.car");
    merge("io/IStringReader.car");
    merge("io/IStringWriter.car");
    merge("io/IStreams.car");
    merge("io/IMemory.car");
    merge("io/Errors.car");
    merge("io/Exceptions.car");

    merge("io/ByteOrder.car");
    merge("io/IBuffer.car");
    merge("io/IByteBuffer.car");
    merge("io/ICharBuffer.car");
    merge("io/IDoubleBuffer.car");
    merge("io/IFloatBuffer.car");
    merge("io/IInt16Buffer.car");
    merge("io/IInt32Buffer.car");
    merge("io/IInt64Buffer.car");
    merge("io/IIoUtils.car");
    merge("io/IUnsafeByteSequence.car");
    merge("io/IMappedByteBuffer.car");
    merge("io/INIOAccess.car");

    merge("io/channels/IChannel.car");
    merge("io/channels/IReadableByteChannel.car");
    merge("io/channels/IWritableByteChannel.car");
    merge("io/channels/IChannels.car");
    merge("io/channels/IScatteringByteChannel.car");
    merge("io/channels/IGatheringByteChannel.car");

    merge("io/channels/IInterruptibleChannel.car");
    merge("io/channels/IFileChannel.car");
    merge("io/channels/spi/IAbstractInterruptibleChannel.car");
    merge("io/channels/ISelectableChannel.car");
    merge("io/channels/ISelectionKey.car");
    merge("io/channels/ISelector.car");
    merge("io/channels/ISocketChannel.car");
    merge("io/channels/IServerSocketChannel.car");
    merge("io/channels/spi/IAbstractSelectableChannel.car");

    merge("io/channels/IDatagramChannel.car");
    merge("io/channels/ISinkChannel.car");
    merge("io/channels/ISourceChannel.car");
    merge("io/channels/IPipe.car");
    merge("io/channels/IFileLock.car");
    merge("io/IFileDescriptorChannel.car");

    merge("io/channels/spi/ISelectorProvider.car");
    merge("io/channels/spi/IAbstractSelector.car");
    merge("io/channels/spi/IAbstractSelectionKey.car");
    merge("io/charset/ICharset.car");
    merge("io/charset/ICoderResult.car");
    merge("io/charset/ICharsetDecoder.car");
    merge("io/charset/ICharsetEncoder.car");
    merge("io/charset/ICodingErrorAction.car");
    merge("io/charset/ICharsets.car");
    merge("io/charset/IModifiedUtf8.car");
    merge("io/INativeConverterHelper.car");

    merge("io/charset/spi/ICharsetProvider.car");

    merge("io/ISelectorImpl.car");
    merge("io/ISelectionKeyImpl.car");
    merge("io/IPipeImpl.car");
    merge("io/IFileChannelImpl.car");


    //======================================================
    // Elastos.Utility
    //======================================================
    merge("utility/Exceptions.car");
    merge("utility/IObjectEnumerator.car");
    merge("utility/IObjectContainer.car");
    merge("utility/IBitSet.car");
    merge("utility/IDate.car");
    merge("utility/ICalendar.car");
    merge("utility/IIterable.car");
    merge("utility/ICollection.car");
    merge("utility/IList.car");
    merge("utility/ILocale.car");
    merge("utility/IMap.car");
    merge("utility/ILinkedList.car");
    merge("utility/IDictionary.car");
    merge("utility/IProperties.car");
    merge("utility/IEnumeration.car");
    merge("utility/IGregorianCalendar.car");
    merge("utility/IIterator.car");
    merge("utility/IListIterator.car");
    merge("utility/IObjectStringMap.car");
    merge("utility/IObjectInt32Map.car");
    merge("utility/IObjectMap.car");
    merge("utility/IQueue.car");
    merge("utility/IDeque.car");
    merge("utility/IRandomAccess.car");
    merge("utility/ITimeZone.car");
    merge("utility/IZoneInfo.car");
    merge("utility/ISimpleTimeZone.car");
    merge("utility/ITimerTask.car");
    merge("utility/ITimer.car");
    merge("utility/ICurrency.car");
    merge("utility/IUUID.car");
    merge("utility/IZoneInfoDB.car");
    merge("utility/ITimeZoneGetter.car");
    merge("utility/IArrayList.car");
    merge("utility/IFormattableFlags.car");
    merge("utility/IFormatter.car");
    merge("utility/IFormattable.car");
    merge("utility/IArrayDeque.car");
    merge("utility/IComparableTimSort.car");
    merge("utility/IDualPivotQuicksort.car");
    merge("utility/IEventListener.car");
    merge("utility/IEventListenerProxy.car");
    merge("utility/IEventObject.car");
    merge("utility/IResourceBundle.car");
    merge("utility/IListResourceBundle.car");
    merge("utility/ISortedMap.car");
    merge("utility/INavigableMap.car");
    merge("utility/ISet.car");
    merge("utility/ISortedSet.car");
    merge("utility/INavigableSet.car");
    merge("utility/IObserver.car");
    merge("utility/IObservable.car");
    merge("utility/IPriorityQueue.car");
    merge("utility/IPropertyResourceBundle.car");
    merge("utility/IScanner.car");
    merge("utility/IServiceLoader.car");
    merge("utility/IVector.car");
    merge("utility/IArrays.car");
    merge("utility/IStack.car");
    merge("utility/IStringTokenizer.car");
    merge("utility/IUnsafeArrayList.car");
    merge("utility/ICollections.car");
    merge("utility/IEnumMap.car");

    merge("utility/regex/IMatchResult.car");
    merge("utility/regex/IMatcher.car");
    merge("utility/regex/ISplitter.car");
    merge("utility/regex/IPattern.car");

    merge("utility/logging/ILevel.car");
    merge("utility/logging/IErrorManager.car");
    merge("utility/logging/IFilter.car");
    merge("utility/logging/ILogFormatter.car");
    merge("utility/logging/ILogHandler.car");
    merge("utility/logging/ILogger.car");
    merge("utility/logging/ILoggingMXBean.car");
    merge("utility/logging/ILogManager.car");
    merge("utility/logging/ILogRecord.car");
    merge("utility/logging/IStreamHandler.car");
    merge("utility/logging/IConsoleHandler.car");
    merge("utility/logging/IMemoryHandler.car");
    merge("utility/logging/ISimpleFormatter.car");
    merge("utility/logging/ISocketHandler.car");
    merge("utility/logging/IXMLFormatter.car");

    merge("utility/prefs/INodeChangeEvent.car");
    merge("utility/prefs/INodeChangeListener.car");
    merge("utility/prefs/IPreferenceChangeEvent.car");
    merge("utility/prefs/IPreferenceChangeListener.car");
    merge("utility/prefs/IPreferences.car");
    merge("utility/prefs/IPreferencesFactory.car");
    merge("utility/prefs/IXMLParser.car");
    merge("utility/prefs/IAbstractPreferences.car");
    merge("utility/prefs/IFilePreferencesFactoryImpl.car");
    merge("utility/prefs/IFilePreferencesImpl.car");

    merge("utility/spi/ILocaleServiceProvider.car");
    merge("utility/spi/ICurrencyNameProvider.car");
    merge("utility/spi/ILocaleNameProvider.car");
    merge("utility/spi/ITimeZoneNameProvider.car");


    //======================================================
    // Elastos.Net
    //======================================================
    merge("net/Exceptions.car");
    merge("net/IAuthenticator.car");
    merge("net/ICacheRequest.car");
    merge("net/ICacheResponse.car");
    merge("net/IContentHandler.car");
    merge("net/IContentHandlerFactory.car");
    merge("net/ICookieHandler.car");
    merge("net/IURLStreamHandler.car");
    merge("net/IURLStreamHandlerFactory.car");
    merge("net/IURI.car");
    merge("net/IURL.car");
    merge("net/ICookieManager.car");
    merge("net/ICookiePolicy.car");
    merge("net/ICookieStore.car");
    merge("net/IDatagramPacket.car");
    merge("net/IDatagramSocket.car");
    merge("net/ISocketOptions.car");
    merge("net/IDatagramSocketImpl.car");
    merge("net/IDatagramSocketImplFactory.car");
    merge("net/IResponseCache.car");
    merge("net/IURLConnection.car");
    merge("net/IHttpURLConnection.car");
    merge("net/IExtendedResponseCache.car");
    merge("net/IFileNameMap.car");
    merge("net/IMimeUtils.car");
    merge("net/IHttpCookie.car");
    merge("net/IIDN.car");
    merge("net/IInetAddress.car");
    merge("net/IInet4Address.car");
    merge("net/IInet6Address.car");
    merge("net/ISocketAddress.car");
    merge("net/IInetSocketAddress.car");
    merge("net/IInterfaceAddress.car");
    merge("net/IMulticastSocket.car");
    merge("net/INetworkInterface.car");
    merge("net/IPasswordAuthentication.car");
    merge("net/IPlainDatagramSocketImpl.car");
    merge("net/ISocketImpl.car");
    merge("net/IPlainSocketImpl.car");
    merge("net/IPlainServerSocketImpl.car");
    merge("net/IProxy.car");
    merge("net/IProxySelector.car");
    merge("net/ISecureCacheResponse.car");
    merge("net/IServerSocket.car");
    merge("net/ISocket.car");
    merge("net/ISocketImplFactory.car");
    merge("net/ISocketInputStream.car");
    merge("net/ISocketOutputStream.car");
    merge("net/ISocks4Message.car");
    merge("net/IURLEncoder.car");
    merge("net/IURLDecoder.car");
    merge("net/IUriCodecHelper.car");
    merge("net/NotUsed.car");
    merge("net/IRawSocket.car");
    merge("net/IJarURLConnection.car");
    merge("net/INetPermission.car");

    merge("net/http/IAbstractHttpInputStream.car");
    merge("net/http/IAbstractHttpOutputStream.car");
    merge("net/http/IChallenge.car");
    merge("net/http/IChunkedInputStream.car");
    merge("net/http/IChunkedOutputStream.car");
    merge("net/http/IFixedLengthInputStream.car");
    merge("net/http/IFixedLengthOutputStream.car");
    merge("net/http/IRawHeaders.car");
    merge("net/http/IHeaderParser.car");
    merge("net/http/IHttpConnection.car");
    merge("net/http/IHttpConnectionPool.car");
    merge("net/http/IHttpDate.car");
    merge("net/http/IResponseHeaders.car");
    merge("net/http/IRequestHeaders.car");
    merge("net/http/IHttpHandler.car");
    merge("net/http/IHttpResponseCache.car");
    merge("net/http/IHttpsHandler.car");
    merge("net/http/IHttpEngine.car");
    merge("net/http/IHttpURLConnectionImpl.car");
    merge("net/http/IRetryableOutputStream.car");
    merge("net/http/IUnknownLengthHttpInputStream.car");

    merge("net/url/IFileHandler.car");
    merge("net/url/IFileURLConnection.car");
    merge("net/url/IFtpHandler.car");
    merge("net/url/IFtpURLConnection.car");
    merge("net/url/IFtpURLInputStream.car");
    merge("net/url/IJarHandler.car");
    merge("net/url/IJarURLConnectionImpl.car");
    merge("net/url/IUrlUtils.car");

    merge("../elastosx/net/ISocketFactory.car");
    merge("../elastosx/net/IServerSocketFactory.car");

    merge("../elastosx/net/ssl/IKeyManager.car");
    merge("../elastosx/net/ssl/IManagerFactoryParameters.car");
    merge("../elastosx/net/ssl/ITrustManager.car");
    merge("../elastosx/net/ssl/ISSLSession.car");
    merge("../elastosx/net/ssl/ISSLSessionContext.car");
    merge("../elastosx/net/ssl/ISSLEngineResult.car");
    merge("../elastosx/net/ssl/ISSLEngine.car");
    merge("../elastosx/net/ssl/ISSLParameters.car");
    merge("../elastosx/net/ssl/IHandshakeCompletedListener.car");
    merge("../elastosx/net/ssl/IHandshakeCompletedEvent.car");
    merge("../elastosx/net/ssl/ISSLSocket.car");
    merge("../elastosx/net/ssl/IX509TrustManager.car");
    merge("../elastosx/net/ssl/ISSLContextSpi.car");
    merge("../elastosx/net/ssl/ISSLSocketFactory.car");
    merge("../elastosx/net/ssl/ISSLServerSocketFactory.car");
    merge("../elastosx/net/ssl/IX509KeyManager.car");
    merge("../elastosx/net/ssl/IX509ExtendedKeyManager.car");
    merge("../elastosx/net/ssl/IKeyManagerFactorySpi.car");
    merge("../elastosx/net/ssl/ISSLServerSocket.car");
    merge("../elastosx/net/ssl/ITrustManagerFactorySpi.car");

    //======================================================
    // Elastos.Text
    //======================================================
    merge("text/Exceptions.car");
    merge("text/IAnnotation.car");
    merge("text/IFormat.car");
    merge("text/IDateFormat.car");
    merge("text/IDateFormatSymbols.car");
    merge("text/INumberFormat.car");
    merge("text/IMessageFormat.car");
    merge("text/IChoiceFormat.car");
    merge("text/IDecimalFormat.car");
    merge("text/ISimpleDateFormat.car");
    merge("text/IBreakIterator.car");
    merge("text/ICollator.car");
    merge("text/ICollationElementIterator.car");
    merge("text/IRuleBasedCollator.car");
    merge("text/INormalizer.car");
    merge("text/IBidi.car");
    merge("text/IRuleBasedBreakIterator.car");

    merge("text/spi/IBreakIteratorProvider.car");
    merge("text/spi/ICollatorProvider.car");
    merge("text/spi/IDateFormatProvider.car");
    merge("text/spi/IDateFormatSymbolsProvider.car");
    merge("text/spi/IDecimalFormatSymbolsProvider.car");
    merge("text/spi/INumberFormatProvider.car");

    //======================================================
    // Elastos.Security
    //======================================================
    merge("security/IKey.car");
    merge("security/IPublicKey.car");
    merge("security/IPrivateKey.car");
    merge("security/IPrincipal.car");
    merge("security/IMessageDigestSpi.car");

    merge("../elastosx/security/cert/ICertificate.car");
    merge("../elastosx/security/cert/IX509Certificate.car");
    merge("../elastosx/security/auth/x500/IX500Principal.car");
    merge("../elastosx/crypto/ISecretKey.car");
    merge("../elastosx/security/auth/callback/ICallback.car");
    merge("../elastosx/security/auth/callback/ICallbackHandler.car");
    merge("../elastosx/security/auth/IDestroyable.car");

    merge("security/acl/Exceptions.car");
    merge("security/acl/IOwner.car");
    merge("security/acl/IAcl.car");
    merge("security/acl/IAclEntry.car");
    merge("security/acl/IGroup.car");
    merge("security/acl/IPermission.car");

    merge("security/cert/Exceptions.car");
    merge("security/cert/ICertificate.car");
    merge("security/cert/IX509Certificate.car");
    merge("security/cert/ICRL.car");
    merge("security/cert/ICRLSelector.car");
    merge("security/cert/ICertPath.car");
    merge("security/cert/ICertPathParameters.car");
    merge("security/cert/ICertPathValidatorResult.car");
    merge("security/cert/ICertPathBuilderResult.car");
    merge("security/cert/ICertPathBuilderSpi.car");
    merge("security/cert/ICertPathBuilder.car");
    merge("security/cert/ICertPathValidator.car");
    merge("security/cert/ICertPathValidatorSpi.car");
    merge("security/cert/ICertSelector.car");
    merge("security/cert/ICertStore.car");
    merge("security/cert/ICertStoreParameters.car");
    merge("security/cert/ICertStoreSpi.car");
    merge("security/cert/ICertificateFactory.car");
    merge("security/cert/ICertificateFactorySpi.car");
    merge("security/cert/ICollectionCertStoreParameters.car");
    merge("security/cert/ILDAPCertStoreParameters.car");
    merge("security/cert/IPKIXParameters.car");
    merge("security/cert/IPKIXBuilderParameters.car");
    merge("security/cert/IPolicyNode.car");
    merge("security/cert/ITrustAnchor.car");
    merge("security/cert/IPKIXCertPathValidatorResult.car");
    merge("security/cert/IPKIXCertPathBuilderResult.car");
    merge("security/cert/IPKIXCertPathChecker.car");
    merge("security/cert/IPolicyQualifierInfo.car");
    merge("security/cert/IX509CRL.car");
    merge("security/cert/IX509Extension.car");
    merge("security/cert/IX509CRLEntry.car");
    merge("security/cert/IX509CRLSelector.car");
    merge("security/cert/IX509CertSelector.car");

    merge("security/spec/IRSAOtherPrimeInfo.car");

    merge("security/interfaces/IDSAKey.car");
    merge("security/interfaces/IDSAKeyPairGenerator.car");
    merge("security/interfaces/IDSAParams.car");
    merge("security/interfaces/IDSAPrivateKey.car");
    merge("security/interfaces/IDSAPublicKey.car");
    merge("security/interfaces/IECKey.car");
    merge("security/interfaces/IECPrivateKey.car");
    merge("security/interfaces/IECPublicKey.car");
    merge("security/interfaces/IRSAKey.car");
    merge("security/interfaces/IRSAPrivateKey.car");
    merge("security/interfaces/IRSAMultiPrimePrivateCrtKey.car");
    merge("security/interfaces/IRSAPrivateCrtKey.car");
    merge("security/interfaces/IRSAPublicKey.car");

    merge("security/spec/Exceptions.car");
    merge("security/spec/IAlgorithmParameterSpec.car");
    merge("security/spec/IKeySpec.car");
    merge("security/spec/IDSAPrivateKeySpec.car");
    merge("security/spec/IDSAPublicKeySpec.car");
    merge("security/spec/IECField.car");
    merge("security/spec/IECFieldF2m.car");
    merge("security/spec/IECFieldFp.car");
    merge("security/spec/IECGenParameterSpec.car");
    merge("security/spec/IECParameterSpec.car");
    merge("security/spec/IECPoint.car");
    merge("security/spec/IECPrivateKeySpec.car");
    merge("security/spec/IECPublicKeySpec.car");
    merge("security/spec/IEllipticCurve.car");
    merge("security/spec/IEncodedKeySpec.car");
    merge("security/spec/IMGF1ParameterSpec.car");
    merge("security/spec/IPKCS8EncodedKeySpec.car");
    merge("security/spec/IPSSParameterSpec.car");
    merge("security/spec/IPublicKey.car");
    merge("security/spec/IRSAKeyGenParameterSpec.car");
    merge("security/spec/IRSAPrivateKeySpec.car");
    merge("security/spec/IRSAMultiPrimePrivateCrtKeySpec.car");
    merge("security/spec/IRSAPrivateCrtKeySpec.car");
    merge("security/spec/IRSAPublicKeySpec.car");
    merge("security/spec/IX509EncodedKeySpec.car");

    merge("security/Exceptions.car");
    merge("security/IAccessControlContext.car");
    merge("security/IAccessController.car");
    merge("security/IAlgorithmParameterGenerator.car");
    merge("security/IAlgorithmParameters.car");
    merge("security/IProvider.car");
    merge("security/IAuthProvider.car");
    merge("security/ICertificate.car");
    merge("security/ITimestamp.car");
    merge("security/ICodeSigner.car");
    merge("security/ICodeSource.car");
    merge("security/IDigestInputStream.car");
    merge("security/IDigestOutputStream.car");
    merge("security/IDomainCombiner.car");
    merge("security/IGuard.car");
    merge("security/IGuardedObject.car");
    merge("security/IIdentity.car");
    merge("security/IIdentityScope.car");
    merge("security/IKeyFactory.car");
    merge("security/IKeyFactorySpi.car");
    merge("security/IKeyPair.car");
    merge("security/IKeyPairGenerator.car");
    merge("security/IKeyPairGeneratorSpi.car");
    merge("security/IKeyRep.car");
    merge("security/IKeyStore.car");
    merge("security/IKeyStoreSpi.car");
    merge("security/IMessageDigest.car");
    merge("security/IPermission.car");
    merge("security/IPermissionCollection.car");
    merge("security/IPolicy.car");
    merge("security/IPrivilegedAction.car");
    merge("security/IPrivilegedExceptionAction.car");
    merge("security/IProtectionDomain.car");
    merge("security/ISecureRandom.car");
    merge("security/ISecureRandomSpi.car");
    merge("security/ISecurity.car");
    merge("security/ISignature.car");
    merge("security/ISignedObject.car");
    merge("security/ISigner.car");
    merge("../elastosx/crypto/spec/IIvParameterSpec.car");
    merge("../elastosx/crypto/ICipherSpi.car");
    merge("security/IUnresolvedPermission.car");

    merge("../elastosx/security/auth/callback/Exceptions.car");
    merge("../elastosx/security/auth/callback/IPasswordCallback.car");
    merge("../elastosx/security/auth/login/Exceptions.car");
    merge("../elastosx/security/auth/Exceptions.car");
    merge("../elastosx/security/auth/IPrivateCredentialPermission.car");
    merge("../elastosx/security/auth/ISubject.car");
    merge("../elastosx/security/auth/ISubjectDomainCombiner.car");


    //======================================================
    // Elastos.Utility.Concurrent
    //======================================================
    merge("utility/concurrent/atomic/IAtomicBoolean.car");
    merge("utility/concurrent/atomic/IAtomicInteger32.car");
    merge("utility/concurrent/atomic/IAtomicInteger32Array.car");
    merge("utility/concurrent/atomic/IAtomicInteger32FieldUpdater.car");
    merge("utility/concurrent/atomic/IAtomicInteger64.car");
    merge("utility/concurrent/atomic/IAtomicInteger64Array.car");
    merge("utility/concurrent/atomic/IAtomicInteger64FieldUpdater.car");
    merge("utility/concurrent/atomic/IAtomicMarkableReference.car");
    merge("utility/concurrent/atomic/IAtomicReference.car");
    merge("utility/concurrent/atomic/IAtomicReferenceArray.car");
    merge("utility/concurrent/atomic/IAtomicReferenceFieldUpdater.car");
    merge("utility/concurrent/atomic/IAtomicStampedReference.car");
    merge("utility/concurrent/atomic/IFences.car");

    merge("utility/concurrent/locks/ILockSupport.car");
    merge("utility/concurrent/locks/IAbstractQueuedInteger64Synchronizer.car");
    merge("utility/concurrent/locks/IAbstractQueuedSynchronizer.car");
    merge("utility/concurrent/locks/ICondition.car");
    merge("utility/concurrent/locks/ILock.car");
    merge("utility/concurrent/locks/IReadWriteLock.car");
    merge("utility/concurrent/locks/IReentrantLock.car");
    merge("utility/concurrent/locks/IReentrantReadWriteLock.car");

    merge("utility/concurrent/Exceptions.car");
    merge("utility/concurrent/IBlockingQueue.car");
    merge("utility/concurrent/ICallable.car");
    merge("utility/concurrent/ICompletionService.car");
    merge("utility/concurrent/ICountDownLatch.car");
    merge("utility/concurrent/IExecutor.car");
    merge("utility/concurrent/IExecutors.car");
    merge("utility/concurrent/IExecutorService.car");
    merge("utility/concurrent/IAbstractExecutorService.car");
    merge("utility/concurrent/IFuture.car");
    merge("utility/concurrent/IRejectedExecutionHandler.car");
    merge("utility/concurrent/IRunnableFuture.car");
    merge("utility/concurrent/IThreadFactory.car");
    merge("utility/concurrent/IThreadPoolExecutor.car");
    merge("utility/concurrent/ITimeUnit.car");
    merge("utility/concurrent/IArrayBlockingQueue.car");
    merge("utility/concurrent/IBlockingDeque.car");
    merge("utility/concurrent/IConcurrentLinkedQueue.car");
    merge("utility/concurrent/ICopyOnWriteArrayList.car");
    merge("utility/concurrent/ICyclicBarrier.car");
    merge("utility/concurrent/IDelayed.car");
    merge("utility/concurrent/IDelayQueue.car");
    merge("utility/concurrent/IExchanger.car");
    merge("utility/concurrent/IForkJoinPool.car");
    merge("utility/concurrent/IForkJoinWorkerThread.car");
    merge("utility/concurrent/IForkJoinTask.car");
    merge("utility/concurrent/IPhaser.car");
    merge("utility/concurrent/IRunnableScheduledFuture.car");
    merge("utility/concurrent/ISemaphore.car");
    merge("utility/concurrent/ISynchronousQueue.car");
    merge("utility/concurrent/IThreadLocalRandom.car");
    merge("utility/concurrent/ITransferQueue.car");
    merge("utility/concurrent/IConcurrentMap.car");
    merge("utility/concurrent/IConcurrentHashMap.car");


    //======================================================
    // Elastos.Utility.Zip
    //======================================================
    merge("utility/zip/Errors.car");
    merge("utility/zip/Exceptions.car");
    merge("utility/zip/IZipConstants.car");
    merge("utility/zip/IChecksum.car");
    merge("utility/zip/IAdler32.car");
    merge("utility/zip/ICRC32.car");
    merge("utility/zip/IInflater.car");
    merge("utility/zip/IDeflater.car");
    merge("utility/zip/IZipEntry.car");
    merge("utility/zip/IInflaterInputStream.car");
    merge("utility/zip/IInflaterOutputStream.car");
    merge("utility/zip/IDeflaterInputStream.car");
    merge("utility/zip/IDeflaterOutputStream.car");
    merge("utility/zip/IZipInputStream.car");
    merge("utility/zip/IZipOutputStream.car");
    merge("utility/zip/ICheckedInputStream.car");
    merge("utility/zip/ICheckedOutputStream.car");
    merge("utility/zip/IGZIPInputStream.car");
    merge("utility/zip/IGZIPOutputStream.car");
    merge("utility/zip/IZipFile.car");


    //======================================================
    // Elastos.Utility.Jar
    //======================================================
    merge("utility/jar/IAttributes.car");
    merge("utility/jar/IJarEntry.car");
    merge("utility/jar/IManifest.car");
    merge("utility/jar/IJarFile.car");
    merge("utility/jar/IJarInputStream.Car");
    merge("utility/jar/IJarOutputStream.car");
    merge("utility/jar/IPack200.car");


    //======================================================
    // Elastos.Sql
    //======================================================
    merge("sql/Exceptions.car");
    merge("sql/ITypes.car");
    merge("sql/IClob.car");
    merge("sql/IBlob.car");
    merge("sql/INClob.car");
    merge("sql/IArray.car");
    merge("sql/IStruct.car");
    merge("sql/IDate.car");
    merge("sql/ITime.car");
    merge("sql/IWrapper.car");
    merge("sql/IParameterMetaData.car");
    merge("sql/IRowId.car");
    merge("sql/ITimestamp.car");
    merge("sql/IRef.car");
    merge("sql/ISQLStruct.car");
    merge("sql/ISQLXML.car");
    merge("sql/ISQLInput.car");
    merge("sql/ISQLOutput.car");
    merge("sql/ISQLData.car");
    merge("sql/IStatement.car");
    merge("sql/ISQLWarning.car");
    merge("sql/IRowIdLifeTime.car");
    merge("sql/IResultSetMetaData.car");
    merge("sql/IResultSet.car");
    merge("sql/IDatabaseMetaData.car");
    merge("sql/IPreparedStatement.car");
    merge("sql/ICallableStatement.car");
    merge("sql/ISavePoint.car");
    merge("sql/ISQLPermission.car");
    merge("sql/IConnection.car");
    merge("sql/IDriver.car");
    merge("sql/IDriverManagerHelper.car");
    merge("sql/IDataTruncation.car");
    merge("sql/IDriverPropertyInfo.car");

    merge("sql/sqlite/IStringEncoderHelper.car");
    merge("sql/sqlite/IAuthorizer.car");
    merge("sql/sqlite/IBlob.car");
    merge("sql/sqlite/ICallback.car");
    merge("sql/sqlite/IBusyHandler.car");
    merge("sql/sqlite/ITableResult.car");
    merge("sql/sqlite/IFunctionContext.car");
    merge("sql/sqlite/IFunction.car");
    merge("sql/sqlite/ITrace.car");
    merge("sql/sqlite/IProfile.car");
    merge("sql/sqlite/IVm.car");
    merge("sql/sqlite/IStmt.car");
    merge("sql/sqlite/IBackup.car");
    merge("sql/sqlite/IProgressHandler.car");
    merge("sql/sqlite/IDatabase.car");

    merge("sql/sqlite/IMockFunction.car");

    merge("sql/sqlite/IConstants.car");
    merge("sql/sqlite/IShell.car");

    merge("sql/sqlite/jdbc/IJDBCConnection.car");
    merge("sql/sqlite/jdbc/IJDBCStatement.car");
    merge("sql/sqlite/jdbc/IJDBCPreparedStatement.car");
    merge("sql/sqlite/jdbc/IJDBCResultSetMetaData.car");
    merge("sql/sqlite/jdbc/ITableResultX.car");
    merge("sql/sqlite/jdbc/IJDBCDatabaseMetaData.car");
    merge("sql/sqlite/jdbc/IJDBCResultSet.car");

}