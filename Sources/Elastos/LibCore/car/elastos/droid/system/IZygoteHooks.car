
module
{
    namespace Elastos {
    namespace Droid {
    namespace System {

    /**
     * Provides hooks for the zygote to call back into the runtime to perform
     * parent or child specific initialization..
     *
     * @hide
     */
    interface IZygoteHooks {
        /**
         * Called by the zygote prior to every fork. Each call to {@code preFork}
         * is followed by a matching call to {@link #postForkChild(int)} on the child
         * process and {@link #postForkCommon()} on both the parent and the child
         * process. {@code postForkCommon} is called after {@code postForkChild} in
         * the child process.
         */
        PreFork();

        /**
         * Called by the zygote in the child process after every fork. The debug
         * flags from {@code debugFlags} are applied to the child process. The string
         * {@code instructionSet} determines whether to use a native bridge.
         */
        PostForkChild(
            [in] Int32 debugFlags,
            [in] String instructionSet);

        /**
         * Called by the zygote in both the parent and child processes after
         * every fork. In the child process, this method is called after
         * {@code postForkChild}.
         */
        PostForkCommon();
    }

    } // namespace System
    } // namespace Droid
    } // namespace Elastos
}