module
{
    interface Elastos.IO.IWriter;

    namespace Elastos {
    namespace IO {
    /**
    * A specialized Writer for class for writing content to an (internal) char array.
    * As bytes are written to this writer, the char array may be expanded to hold more
    * characters. When the writing is considered to be finished, a copy of the char
    * array can be requested from the class.
    * @sa CharArrayReader
    * @implement Elastos.IO.IWriter
    */

     /**
     * @Involve
     * interface Elastos.Core.IAppendable;
     * interface IWriter;
     */
    interface ICharArrayWriter {
        /**
         * Resets this writer. The current write position is reset to the beginning
         * of the buffer. All written characters are lost and the size of this
         * writer is set to 0.
         */
        Reset();

        /**
         * Returns the size of this writer, that is the number of characters it
         * stores. This number changes if this writer is reset or when more
         * characters are written to it.
         *
         * @return this CharArrayWriter's current size in characters.
         */
        GetSize(
            [out] Int32* size);

        /**
         * Returns the contents of the receiver as a char array. The array returned
         * is a copy and any modifications made to this writer after calling this
         * method are not reflected in the result.
         *
         * @return this CharArrayWriter's contents as a new char array.
         */
        ToCharArray(
            [out, callee] ArrayOf<Char32>* buffer);

        /**
         * Writes the contents of this {CharArrayWriter} to another {Writer}.
         * The output is all the characters that have been written to the
         * receiver since the last reset or since it was created.
         *
         * @param out
         *            the non-null {Writer} on which to write the contents.
         * @return ECode = NOERROR(0) if success, else as follows:
         * Value | Meaning |
         * :-|:------------|
         * NullPointerException | if {out} is {null}.
         * IOException | if an error occurs attempting to write out the contents.
         */
        WriteTo(
            [in] IWriter* ot);
    }

    } // namespace IO
    } // namespace Elastos
}