
module
{
    interface Elastos.Utility.IProperties;
    interface Elastos.Utility.ISet;
    interface Elastos.Security.IProvider;

    namespace Elastos {
    namespace Security {

        interface IService {
            /**
             * Returns the type of this {@code Service}. For example {@code
             * KeyPairGenerator}.
             *
             * @return the type of this {@code Service}.
             */
             GetType(
                [out] String* type);

            /**
             * Returns the name of the algorithm implemented by this {@code
             * Service}.
             *
             * @return the name of the algorithm implemented by this {@code
             *         Service}.
             */
             GetAlgorithm(
                [out] String* algorithm);

            /**
             * Returns the {@code Provider} this {@code Service} belongs to.
             *
             * @return the {@code Provider} this {@code Service} belongs to.
             */
            GetProvider(
                [out] IProvider** provider);

            /**
             * Returns the name of the class implementing this {@code Service}.
             *
             * @return the name of the class implementing this {@code Service}.
             */
            GetClassName(
                [out] String* className);

            /**
             * Returns the value of the attribute with the specified {@code name}.
             *
             * @param name
             *            the name of the attribute.
             * @return the value of the attribute, or {@code null} if no attribute
             *         with the given name is set.
             * @throws NullPointerException
             *             if {@code name} is {@code null}.
             */
            GetAttribute(
                [in] String name,
                [out] String* attrib);

            /**
             * Creates and returns a new instance of the implementation described by
             * this {@code Service}.
             *
             * @param constructorParameter
             *            the parameter that is used by the constructor, or {@code
             *            null} if the implementation does not declare a constructor
             *            parameter.
             * @return a new instance of the implementation described by this
             *         {@code Service}.
             * @throws NoSuchAlgorithmException
             *             if the instance could not be constructed.
             * @throws InvalidParameterException
             *             if the implementation does not support the specified
             *             {@code constructorParameter}.
             */
             NewInstance(
                [in] PInterface constructorParameter,
                [out] PInterface* instance);

            /**
             * Indicates whether this {@code Service} supports the specified
             * constructor parameter.
             *
             * @param parameter
             *            the parameter to test.
             * @return {@code true} if this {@code Service} supports the specified
             *         constructor parameter, {@code false} otherwise.
             */
            SupportsParameter(
                [in] PInterface parameter,
                [out] Boolean* isSupported);

            ToString(
                [out] String* valInString);
        }

        /**
          * @Involve
          * interface Elastos.Utility.IProperties;
          */
        interface IProvider {
            /**
             * Returns the name of this provider.
             *
             * @return the name of this provider.
             */
            GetName(
                [out] String* name);

            /**
             * Returns the version number for the services being provided.
             *
             * @return the version number for the services being provided.
             */
            GetVersion(
                [out] Double* versionNumber);

            /**
             * Returns a description of the services being provided.
             *
             * @return a description of the services being provided.
             */
             GetInfo(
                [out] String* info);

            /**
             * Returns the service with the specified {@code type} implementing the
             * specified {@code algorithm}, or {@code null} if no such implementation
             * exists.
             * <p>
             * If two services match the requested type and algorithm, the one added
             * with the {@link #putService(Service)} is returned (as opposed to the one
             * added via {@link #put(Object, Object)}.
             *
             * @param type
             *            the type of the service (for example {@code KeyPairGenerator})
             * @param algorithm
             *            the algorithm name (case insensitive)
             * @return the requested service, or {@code null} if no such implementation
             *         exists
             */
             GetService(
                [in] String type,
                [in] String algorithm,
                [out] IService** service);

            /**
             * Returns an unmodifiable {@code Set} of all services registered by this
             * provider.
             *
             * @return an unmodifiable {@code Set} of all services registered by this
             *         provider
             */
             GetServices(
                [out] ISet** services);
        }
    } // Security
    } // Elastos
}
