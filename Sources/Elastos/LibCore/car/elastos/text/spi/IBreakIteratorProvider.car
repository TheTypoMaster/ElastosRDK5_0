module
{
    interface Elastos.Text.IBreakIterator;
    interface Elastos.Utility.ILocale;
    interface Elastos.Utility.Spi.ILocaleServiceProvider;

    namespace Elastos {
    namespace Text {
    namespace Spi {

    interface IBreakIteratorProvider { //extends ILocaleServiceProvider
        /**
         * Returns an instance of {@code BreakIterator} for word breaks in the
         * given locale.
         *
         * @param locale the locale
         * @return an instance of {@code BreakIterator}
         * @throws NullPointerException if {@code locale == null}
         * @throws IllegalArgumentException
         *             if locale isn't one of the locales returned from
         *             getAvailableLocales().
         */
        GetWordInstance(
            [in] ILocale * locale,
            [out] IBreakIterator ** breakiter);

        /**
         * Returns an instance of {@code BreakIterator} for line breaks in the
         * given locale.
         *
         * @param locale the locale
         * @return an instance of {@code BreakIterator}
         * @throws NullPointerException if {@code locale == null}
         * @throws IllegalArgumentException
         *             if locale isn't one of the locales returned from
         *             getAvailableLocales().
         */
        GetLineInstance(
            [in] ILocale * locale,
            [out] IBreakIterator ** breakiter);

        /**
         * Returns an instance of {@code BreakIterator} for character breaks in the
         * given locale.
         *
         * @param locale the locale
         * @return an instance of {@code BreakIterator}
         * @throws NullPointerException if {@code locale == null}
         * @throws IllegalArgumentException
         *             if locale isn't one of the locales returned from
         *             getAvailableLocales().
         */
        GetCharacterInstance(
            [in] ILocale * locale,
            [out] IBreakIterator ** breakiter);

        /**
         * Returns an instance of {@code BreakIterator} for sentence breaks in the
         * given locale.
         *
         * @param locale the locale
         * @return an instance of {@code BreakIterator}
         * @throws NullPointerException if {@code locale == null}
         * @throws IllegalArgumentException
         *             if locale isn't one of the locales returned from
         *             getAvailableLocales().
         */
        GetSentenceInstance(
            [in] ILocale * locale,
            [out] IBreakIterator ** breakiter);

    }

    } // namespace Spi
    } // namespace Text
    } // namespace Elastos
}