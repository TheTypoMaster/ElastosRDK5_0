
module
{

    namespace Elastos {
    namespace Utility {
    /**
     * FormattableFlags are used as a parameter to
     * {@link Formattable#formatTo(Formatter, int, int, int)} and change the output
     * format in {@code Formattable}s. The validation and interpretation of the
     * flags must be done by the implementations.
     *
     * @see Formattable
     */

    interface IFormattableFlags {
        /**
         * Denotes the output is to be left-justified. In order to fill the minimum
         * width requirement, spaces('\u0020') will be appended at the end of the
         * specified output element. If no such flag is set, the output is
         * right-justified.
         *
         * The flag corresponds to '-' ('\u002d') in the format specifier.
         */
        const Int32 LEFT_JUSTIFY = 1;

        /**
         * Denotes the output is to be converted to upper case in the way the locale
         * parameter of Formatter.formatTo() requires. The output has the same
         * effect as {@code String.toUpperCase(java.util.Locale)}.
         *
         * This flag corresponds to {@code '^' ('\u005e')} in the format specifier.
         */
        const Int32 UPPERCASE = 2;

        /**
         * Denotes the output is to be formatted in an alternate form. The definition
         * of the alternate form is determined by the {@code Formattable}.
         *
         * This flag corresponds to {@code '#' ('\u0023')} in the format specifier.
         */
        const Int32 ALTERNATE = 4;
    }

    } // namespace Utility
    } // namespace Elastos
}
