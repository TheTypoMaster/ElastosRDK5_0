
module
{
    namespace Elastos {
    namespace Utility {

    /**
     * An ListIterator is used to sequence over a List of objects. ListIterator can
     * move backwards or forwards through the list.
     */

    /**
     * @Involve
     * interface IIterator;
     */
    interface IListIterator {
        /**
         * Inserts the specified object into the list between {@code next} and
         * {@code previous}. The object inserted will be the previous object.
         *
         * @param object
         *            the object to insert.
         * @throws UnsupportedOperationException
         *             if adding is not supported by the list being iterated.
         * @throws ClassCastException
         *             if the class of the object is inappropriate for the list.
         * @throws IllegalArgumentException
         *             if the object cannot be added to the list.
         */
        Add(
            [in] IInterface* object);

        /**
         * Returns whether there are previous elements to iterate.
         *
         * @return {@code true} if there are previous elements, {@code false}
         *         otherwise.
         * @see #previous
         */
        HasPrevious(
            [out] Boolean* result);

        /**
         * Returns the index of the next object in the iteration.
         *
         * @return the index of the next object, or the size of the list if the
         *         iterator is at the end.
         * @throws NoSuchElementException
         *             if there are no more elements.
         * @see #next
         */
        GetNextIndex(
            [out] Int32* index);

        /**
         * Returns the previous object in the iteration.
         *
         * @return the previous object.
         * @throws NoSuchElementException
         *             if there are no previous elements.
         * @see #hasPrevious
         */
        GetPrevious(
            [out] IInterface** object);

        /**
         * Returns the index of the previous object in the iteration.
         *
         * @return the index of the previous object, or -1 if the iterator is at the
         *         beginning.
         * @throws NoSuchElementException
         *             if there are no previous elements.
         * @see #previous
         */
        GetPreviousIndex(
            [out] Int32* index);

        /**
         * Replaces the last object returned by {@code next} or {@code previous}
         * with the specified object.
         *
         * @param object
         *            the object to set.
         * @throws UnsupportedOperationException
         *             if setting is not supported by the list being iterated
         * @throws ClassCastException
         *             if the class of the object is inappropriate for the list.
         * @throws IllegalArgumentException
         *             if the object cannot be added to the list.
         * @throws IllegalStateException
         *             if {@code next} or {@code previous} have not been called, or
         *             {@code remove} or {@code add} have already been called after
         *             the last call to {@code next} or {@code previous}.
         */
        Set(
            [in] IInterface* object);
    }

    } // namespace Utility
    } // namespace Elastos
}