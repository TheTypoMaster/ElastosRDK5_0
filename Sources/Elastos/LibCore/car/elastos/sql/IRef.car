module
{
    interface Elastos.Utility.IMap;

    namespace Elastos {
    namespace Sql {

    interface IRef {
        /**
         * Gets the fully-qualified SQL name of the SQL structured type that this
         * {@code Ref} references.
         *
         * @return the fully qualified name of the SQL structured type.
         * @throws SQLException
         *             if there is a database error.
         */
        GetBaseTypeName(
            [out] String * str);

        /**
         * Gets the SQL structured type instance referenced by this {@code Ref}.
         *
         * @return a Java object whose type is defined by the mapping for the SQL
         *         structured type.
         * @throws SQLException
         *             if there is a database error.
         */
        GetObject(
            [out] IInterface ** inter);

        /**
         * Returns the associated object and uses the relevant mapping to convert it
         * to a Java type.
         *
         * @param map
         *            the mapping for type conversion.
         * @return a Java object whose type is defined by the mapping for the SQL
         *         structured type.
         * @throws SQLException
         *             if there is a database error.
         */
        GetObject(
            [in] IMap * map,
            [out] IInterface ** inter);

        /**
         * Sets the value of the structured type that this {@code Ref} references to
         * a supplied object.
         *
         * @param value
         *            the {@code Object} representing the new SQL structured type
         *            that this {@code Ref} references.
         * @throws SQLException
         *             if there is a database error.
         */
        SetObject(
            [in] IInterface * value);
    }

    } // namespace Sql
    } // namespace Elastos
}