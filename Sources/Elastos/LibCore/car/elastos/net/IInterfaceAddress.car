
module
{
    interface Elastos.Net.IInetAddress;

    namespace Elastos {
    namespace Net {
    /**
     * Identifies one of a network interface's addresses. These are passed back
     * from the JNI behind NetworkInterface.getNetworkInterfaces. Multiple addresses
     * for the same interface are collected together on the Java side.
     */

    interface IInterfaceAddress {
        /**
         * Returns the InetAddress for this address.
         */
        GetAddress(
            [out] IInetAddress** address);

        /**
         * Returns the subnet-directed broadcast address if this is an IPv4 interface, null otherwise.
         */
        GetBroadcast(
            [out] IInetAddress** broadcast);

        /**
         * Returns the network prefix length in bits.
         * (In IPv4 parlance, this is known as the subnet mask,
         * but this method applies to IPv6 addresses too.)
         */
        GetNetworkPrefixLength(
            [out] Int16* length);

        /**
         * Tests whether this object is equal to another one. Returns true if
         * the address, broadcast address and prefix length are all equal.
         *
         * @param obj the object to be compared.
         * @return true if 'obj' is equal to this InterfaceAddress, false otherwise.
         */

        Equals(
            [in] IInterface* obj,
            [out] Boolean* equals);

        /**
         * Returns a string containing this interface's address, prefix length, and broadcast address.
         * For example: {@code "/172.18.103.112/23 [/172.18.103.255]"} or
         * {@code "/0:0:0:0:0:0:0:1%1/128 [null]"}.
         */

        ToString(
            [out] String* str);
    }

    } // namespace Net
    } // namespace Elastos
}
