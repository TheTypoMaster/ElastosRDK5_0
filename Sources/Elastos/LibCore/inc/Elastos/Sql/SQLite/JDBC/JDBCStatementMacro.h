
#ifndef __JDBCSTATEMENTMACRO_H__
#define __JDBCSTATEMENTMACRO_H__

#define JDBCSTATEMENT_METHODS_DECL()                                            \
                                                                                \
    CARAPI AddBatch(                                                            \
        /* [in] */ const String& sql);                                          \
                                                                                \
    CARAPI Cancel();                                                            \
                                                                                \
    CARAPI ClearBatch();                                                        \
                                                                                \
    CARAPI ClearWarnings();                                                     \
                                                                                \
    CARAPI Close();                                                             \
                                                                                \
    CARAPI Execute(                                                             \
        /* [in] */ const String& sql,                                           \
        /* [out] */ Boolean* value);                                            \
                                                                                \
    CARAPI ExecuteEx(                                                           \
        /* [in] */ const String& sql,                                           \
        /* [in] */ Int32 autoGeneratedKeys,                                     \
        /* [out] */ Boolean* value);                                            \
                                                                                \
    CARAPI ExecuteEx2(                                                          \
        /* [in] */ const String& sql,                                           \
        /* [in] */ const ArrayOf<Int32>& columnIndexes,                         \
        /* [out] */ Boolean* value);                                            \
                                                                                \
    CARAPI ExecuteEx3(                                                          \
        /* [in] */ const String& sql,                                           \
        /* [in] */ const ArrayOf<String>& columnNames,                          \
        /* [out] */ Boolean* value);                                            \
                                                                                \
    CARAPI ExecuteBatch(                                                        \
        /* [out, callee] */ ArrayOf<Int32> ** value);                           \
                                                                                \
    CARAPI ExecuteQuery(                                                        \
        /* [in] */ const String& sql,                                           \
        /* [out] */ IResultSet ** resultset );                                  \
                                                                                \
    CARAPI ExecuteUpdate(                                                       \
        /* [in] */ const String& sql,                                           \
        /* [out] */ Int32* value);                                              \
                                                                                \
    CARAPI ExecuteUpdateEx(                                                     \
        /* [in] */ const String& sql,                                           \
        /* [in] */ Int32 autoGeneratedKeys,                                     \
        /* [out] */ Int32* value);                                              \
                                                                                \
    CARAPI ExecuteUpdateEx2(                                                    \
        /* [in] */ const String& sql,                                           \
        /* [in] */ const ArrayOf<Int32>& columnIndexes,                         \
        /* [out] */ Int32* value);                                              \
                                                                                \
    CARAPI ExecuteUpdateEx3(                                                    \
        /* [in] */ const String& sql,                                           \
        /* [in] */ const ArrayOf<String>& columnNames,                          \
        /* [out] */ Int32* value);                                              \
                                                                                \
    CARAPI GetConnection(                                                       \
        /* [out] */ IConnection ** conn);                                       \
                                                                                \
    CARAPI GetFetchDirection(                                                   \
        /* [out] */ Int32* value);                                              \
                                                                                \
    CARAPI GetFetchSize(                                                        \
        /* [out] */ Int32* value);                                              \
                                                                                \
    CARAPI GetGeneratedKeys(                                                    \
        /* [out] */ IResultSet ** resultset);                                   \
                                                                                \
    CARAPI GetMaxFieldSize(                                                     \
        /* [out] */ Int32* value);                                              \
                                                                                \
    CARAPI GetMaxRows(                                                          \
        /* [out] */ Int32* value);                                              \
                                                                                \
    CARAPI GetMoreResults(                                                      \
        /* [out] */ Boolean* value);                                            \
                                                                                \
    CARAPI GetMoreResultsEx(                                                    \
        /* [in] */ Int32 current,                                               \
        /* [out] */ Boolean* value);                                            \
                                                                                \
    CARAPI GetQueryTimeout(                                                     \
        /* [out] */ Int32* value);                                              \
                                                                                \
    CARAPI GetResultSet(                                                        \
        /* [out] */ IResultSet ** resultset);                                   \
                                                                                \
    CARAPI GetResultSetConcurrency(                                             \
        /* [out] */ Int32* value);                                              \
                                                                                \
    CARAPI GetResultSetHoldability(                                             \
        /* [out] */ Int32* value);                                              \
                                                                                \
    CARAPI GetResultSetType(                                                    \
        /* [out] */ Int32* value);                                              \
                                                                                \
    CARAPI GetUpdateCount(                                                      \
        /* [out] */ Int32* value);                                              \
                                                                                \
    CARAPI GetWarnings(                                                         \
        /* [out] */ ISQLWarning ** sqlwarn);                                    \
                                                                                \
    CARAPI SetCursorName(                                                       \
        /* [in] */ const String& name);                                         \
                                                                                \
    CARAPI SetEscapeProcessing(                                                 \
        /* [in] */ Boolean enable);                                             \
                                                                                \
    CARAPI SetFetchDirection(                                                   \
        /* [in] */ Int32 direction);                                            \
                                                                                \
    CARAPI SetFetchSize(                                                        \
        /* [in] */ Int32 rows);                                                 \
                                                                                \
    CARAPI SetMaxFieldSize(                                                     \
        /* [in] */ Int32 max);                                                  \
                                                                                \
    CARAPI SetMaxRows(                                                          \
        /* [in] */ Int32 max);                                                  \
                                                                                \
    CARAPI SetQueryTimeout(                                                     \
        /* [in] */ Int32 seconds);                                              \
                                                                                \
    CARAPI IsClosed(                                                            \
        /* [out] */ Boolean * value);                                           \
                                                                                \
    CARAPI SetPoolable(                                                         \
        /* [in] */ Boolean poolable);                                           \
                                                                                \
    CARAPI IsWrapperFor(                                                        \
        /* [in] */ IInterface * iface,                                          \
        /* [out] */ Boolean * value);                                           \
                                                                                \
    CARAPI Unwrap(                                                              \
        /* [in] */ PInterface iface,                                            \
        /* [out] */ IInterface ** oface);                                       \
                                                                                \
    CARAPI IsPoolable(                                                          \
        /* [out] */ Boolean* value);

#define JDBCSTATEMENT_METHODS_IMPL(className, superClass)                       \
                                                                                \
ECode className::AddBatch(                                                      \
        /* [in] */ const String& sql)                                           \
{                                                                               \
    return superClass::AddBatch(sql);                                           \
}                                                                               \
                                                                                \
ECode className::Cancel()                                                       \
{                                                                               \
    return superClass::Cancel();                                                \
}                                                                               \
                                                                                \
ECode className::ClearBatch()                                                   \
{                                                                               \
    return superClass::ClearBatch();                                            \
}                                                                               \
                                                                                \
ECode className::ClearWarnings()                                                \
{                                                                               \
    return superClass::ClearWarnings();                                         \
}                                                                               \
                                                                                \
ECode className::Close()                                                        \
{                                                                               \
    return superClass::Close();                                                 \
}                                                                               \
                                                                                \
ECode className::Execute(                                                       \
        /* [in] */ const String& sql,                                           \
        /* [out] */ Boolean* value)                                             \
{                                                                               \
    *value = superClass::Execute(sql);                                          \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::ExecuteEx(                                                     \
        /* [in] */ const String& sql,                                           \
        /* [in] */ Int32 autoGeneratedKeys,                                     \
        /* [out] */ Boolean* value)                                             \
{                                                                               \
    *value = superClass::ExecuteEx(sql,autoGeneratedKeys);                      \
    return  NOERROR;                                                            \
}                                                                               \
                                                                                \
ECode className::ExecuteEx2(                                                    \
        /* [in] */ const String& sql,                                           \
        /* [in] */ const ArrayOf<Int32>& columnIndexes,                         \
        /* [out] */ Boolean* value)                                             \
{                                                                               \
    *value = superClass::ExecuteEx2(sql,columnIndexes);                         \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::ExecuteEx3(                                                    \
        /* [in] */ const String& sql,                                           \
        /* [in] */ const ArrayOf<String>& columnNames,                          \
        /* [out] */ Boolean* value)                                             \
{                                                                               \
    *value = superClass::ExecuteEx3(sql,columnNames);                           \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::ExecuteBatch(                                                  \
        /* [out, callee] */ ArrayOf<Int32> ** value)                            \
{                                                                               \
    *value = superClass::ExecuteBatch();                                        \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::ExecuteQuery(                                                  \
        /* [in] */ const String& sql,                                           \
        /* [out] */ IResultSet ** resultset )                                   \
{                                                                               \
    *resultset = superClass::ExecuteQuery(sql);                                 \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::ExecuteUpdate(                                                 \
        /* [in] */ const String& sql,                                           \
        /* [out] */ Int32* value)                                               \
{                                                                               \
    *value = superClass::ExecuteUpdate(sql);                                    \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::ExecuteUpdateEx(                                               \
        /* [in] */ const String& sql,                                           \
        /* [in] */ Int32 autoGeneratedKeys,                                     \
        /* [out] */ Int32* value)                                               \
{                                                                               \
    *value = superClass::ExecuteUpdateEx(sql,autoGeneratedKeys);                \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::ExecuteUpdateEx2(                                              \
        /* [in] */ const String& sql,                                           \
        /* [in] */ const ArrayOf<Int32>& columnIndexes,                         \
        /* [out] */ Int32* value)                                               \
{                                                                               \
    *value = superClass::ExecuteUpdateEx2(sql,columnIndexes);                   \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::ExecuteUpdateEx3(                                              \
        /* [in] */ const String& sql,                                           \
        /* [in] */ const ArrayOf<String>& columnNames,                          \
        /* [out] */ Int32* value)                                               \
{                                                                               \
    *value = superClass::ExecuteUpdateEx3(sql,columnNames);                     \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::GetConnection(                                                 \
        /* [out] */ IConnection ** conn)                                        \
{                                                                               \
    *conn = superClass::GetConnection();                                        \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::GetFetchDirection(                                             \
        /* [out] */ Int32* value)                                               \
{                                                                               \
    *value = superClass::GetFetchDirection();                                   \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::GetFetchSize(                                                  \
        /* [out] */ Int32* value)                                               \
{                                                                               \
    *value = superClass::GetFetchSize();                                        \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::GetGeneratedKeys(                                              \
        /* [out] */ IResultSet ** resultset)                                    \
{                                                                               \
    *resultset = superClass::GetGeneratedKeys();                                \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::GetMaxFieldSize(                                               \
        /* [out] */ Int32* value)                                               \
{                                                                               \
    *value = superClass::GetMaxFieldSize();                                     \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::GetMaxRows(                                                    \
        /* [out] */ Int32* value)                                               \
{                                                                               \
    *value = superClass::GetMaxRows();                                          \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::GetMoreResults(                                                \
        /* [out] */ Boolean* value)                                             \
{                                                                               \
    *value = superClass::GetMoreResults();                                      \
    return  NOERROR;                                                            \
}                                                                               \
                                                                                \
ECode className::GetMoreResultsEx(                                              \
        /* [in] */ Int32 current,                                               \
        /* [out] */ Boolean* value)                                             \
{                                                                               \
    *value = superClass::GetMoreResultsEx(current);                             \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::GetQueryTimeout(                                               \
        /* [out] */ Int32* value)                                               \
{                                                                               \
    *value = superClass::GetQueryTimeout();                                     \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::GetResultSet(                                                  \
        /* [out] */ IResultSet ** resultset)                                    \
{                                                                               \
    *resultset = superClass::GetResultSet();                                    \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::GetResultSetConcurrency(                                       \
        /* [out] */ Int32* value)                                               \
{                                                                               \
    *value = superClass::GetResultSetConcurrency();                             \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::GetResultSetHoldability(                                       \
        /* [out] */ Int32* value)                                               \
{                                                                               \
    *value = superClass::GetResultSetHoldability();                             \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::GetResultSetType(                                              \
        /* [out] */ Int32* value)                                               \
{                                                                               \
    *value = superClass::GetResultSetType();                                    \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::GetUpdateCount(                                                \
        /* [out] */ Int32* value)                                               \
{                                                                               \
    *value = superClass::GetUpdateCount();                                      \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::GetWarnings(                                                   \
        /* [out] */ ISQLWarning ** sqlwarn)                                     \
{                                                                               \
    *sqlwarn = superClass::GetWarnings();                                       \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::SetCursorName(                                                 \
        /* [in] */ const String& name)                                          \
{                                                                               \
    return superClass::SetCursorName(name);                                     \
}                                                                               \
                                                                                \
ECode className::SetEscapeProcessing(                                           \
        /* [in] */ Boolean enable)                                              \
{                                                                               \
    return superClass::SetEscapeProcessing(enable);                             \
}                                                                               \
                                                                                \
ECode className::SetFetchDirection(                                             \
        /* [in] */ Int32 direction)                                             \
{                                                                               \
    return superClass::SetFetchDirection(direction);                            \
}                                                                               \
                                                                                \
ECode className::SetFetchSize(                                                  \
        /* [in] */ Int32 rows)                                                  \
{                                                                               \
    return superClass::SetFetchSize(rows);                                      \
}                                                                               \
                                                                                \
ECode className::SetMaxFieldSize(                                               \
        /* [in] */ Int32 max)                                                   \
{                                                                               \
    return superClass::SetMaxFieldSize(max);                                    \
}                                                                               \
                                                                                \
ECode className::SetMaxRows(                                                    \
        /* [in] */ Int32 max)                                                   \
{                                                                               \
    return superClass::SetMaxRows(max);                                         \
}                                                                               \
                                                                                \
ECode className::SetQueryTimeout(                                               \
        /* [in] */ Int32 seconds)                                               \
{                                                                               \
    return superClass::SetQueryTimeout(seconds);                                \
}                                                                               \
                                                                                \
ECode className::IsClosed(                                                      \
        /* [out] */ Boolean * value)                                            \
{                                                                               \
    *value = superClass::IsClosed();                                            \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::SetPoolable(                                                   \
        /* [in] */ Boolean poolable)                                            \
{                                                                               \
    return superClass::SetPoolable(poolable);                                   \
}                                                                               \
                                                                                \
ECode className::IsWrapperFor(                                                  \
        /* [in] */ IInterface * iface,                                          \
        /* [out] */ Boolean * value)                                            \
{                                                                               \
    *value = superClass::IsWrapperFor(iface);                                   \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::Unwrap(                                                        \
        /* [in] */ PInterface iface,                                            \
        /* [out] */ IInterface ** oface)                                        \
{                                                                               \
    *oface = superClass::Unwrap(iface);                                         \
    return NOERROR;                                                             \
}                                                                               \
                                                                                \
ECode className::IsPoolable(                                                    \
        /* [out] */ Boolean* value)                                             \
{                                                                               \
    *value = superClass::IsPoolable();                                          \
    return NOERROR;                                                             \
}                                                                               \

#endif  //__JDBCSTATEMENTMACRO_H__
