
#ifndef __CJDBCSTATEMENT_H__
#define __CJDBCSTATEMENT_H__

#include "_CJDBCStatement.h"
#include "JDBCStatement.h"

namespace Elastos {
namespace Sql {
namespace SQLite {
namespace JDBC{

CarClass(CJDBCStatement) , public JDBCStatement
{
public:
    CARAPI_(PInterface) Probe(
        /* [in] */ REIID riid);

    CARAPI constructor(
        /* [in] */ AutoPtr<IJDBCConnection> conn);

    CARAPI AddBatch(
        /* [in] */ const String& sql);

    CARAPI Cancel();

    CARAPI ClearBatch();

    CARAPI ClearWarnings();

    CARAPI Close();

    CARAPI Execute(
        /* [in] */ const String& sql,
        /* [out] */ Boolean* value);

    CARAPI ExecuteEx(
        /* [in] */ const String& sql,
        /* [in] */ Int32 autoGeneratedKeys,
        /* [out] */ Boolean* value);

    CARAPI ExecuteEx2(
        /* [in] */ const String& sql,
        /* [in] */ const ArrayOf<Int32>& columnIndexes,
        /* [out] */ Boolean* value);

    CARAPI ExecuteEx3(
        /* [in] */ const String& sql,
        /* [in] */ const ArrayOf<String>& columnNames,
        /* [out] */ Boolean* value);

    CARAPI ExecuteBatch(
        /* [out, callee] */ ArrayOf<Int32> ** value);

    CARAPI ExecuteQuery(
        /* [in] */ const String& sql,
        /* [out] */ IResultSet ** resultset );

    CARAPI ExecuteUpdate(
        /* [in] */ const String& sql,
        /* [out] */ Int32* value);

    CARAPI ExecuteUpdateEx(
        /* [in] */ const String& sql,
        /* [in] */ Int32 autoGeneratedKeys,
        /* [out] */ Int32* value);

    CARAPI ExecuteUpdateEx2(
        /* [in] */ const String& sql,
        /* [in] */ const ArrayOf<Int32>& columnIndexes,
        /* [out] */ Int32* value);

    CARAPI ExecuteUpdateEx3(
        /* [in] */ const String& sql,
        /* [in] */ const ArrayOf<String>& columnNames,
        /* [out] */ Int32* value);

    CARAPI GetConnection(
        /* [out] */ IConnection ** conn);

    CARAPI GetFetchDirection(
        /* [out] */ Int32* value);

    CARAPI GetFetchSize(
        /* [out] */ Int32* value);

    CARAPI GetGeneratedKeys(
        /* [out] */ IResultSet ** resultset);

    CARAPI GetMaxFieldSize(
        /* [out] */ Int32* value);

    CARAPI GetMaxRows(
        /* [out] */ Int32* value);

    CARAPI GetMoreResults(
        /* [out] */ Boolean* value);

    CARAPI GetMoreResultsEx(
        /* [in] */ Int32 current,
        /* [out] */ Boolean* value);

    CARAPI GetQueryTimeout(
        /* [out] */ Int32* value);

    CARAPI GetResultSet(
        /* [out] */ IResultSet ** resultset);

    CARAPI GetResultSetConcurrency(
        /* [out] */ Int32* value);

    CARAPI GetResultSetHoldability(
        /* [out] */ Int32* value);

    CARAPI GetResultSetType(
        /* [out] */ Int32* value);

    CARAPI GetUpdateCount(
        /* [out] */ Int32* value);

    CARAPI GetWarnings(
        /* [out] */ ISQLWarning ** sqlwarn);

    CARAPI SetCursorName(
        /* [in] */ const String& name);

    CARAPI SetEscapeProcessing(
        /* [in] */ Boolean enable);

    CARAPI SetFetchDirection(
        /* [in] */ Int32 direction);

    CARAPI SetFetchSize(
        /* [in] */ Int32 rows);

    CARAPI SetMaxFieldSize(
        /* [in] */ Int32 max);

    CARAPI SetMaxRows(
        /* [in] */ Int32 max);

    CARAPI SetQueryTimeout(
        /* [in] */ Int32 seconds);

    CARAPI IsClosed(
        /* [out] */ Boolean * value);

    CARAPI SetPoolable(
        /* [in] */ Boolean poolable);

    CARAPI IsPoolable(
        /* [out] */ Boolean* value);

    CARAPI IsWrapperFor(
        /* [in] */ IInterface * iface,
        /* [out] */ Boolean * value);
    CARAPI Unwrap(
        /* [in] */ PInterface iface,
        /* [out] */ IInterface ** oface);
};

} // namespace JDBC
} // namespace SQLite
} // namespace Sql
} // namespace Elastos

#endif // __CJDBCSTATEMENT_H__
